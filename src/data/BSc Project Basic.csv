guid,front,back,tags
iG}.tuk`]X,What is the challenge in <i>leader election</i>?,To elect a leader among a group of nodes.,"CS::Bsc-Project, CS::distributed-systems, CS::leader-election"
hoUq(`QkO%,What is distributed consensus?,Distributed Consensus refers to an agreement on any subject by a group of participants in distributed systems.,"CS::Bsc-Project, CS::distributed-systems"
OF>TR^g(iU,What is the worst case complexity of the Bully algorithm for Leader Election?,Messages: \(O(n^2)\),"CS::Bsc-Project, CS::distributed-systems, CS::leader-election"
"Et-06-,w_!",What is the worst case complexity of the Ring algorithm for Leader Election?,Messages: \(O(n^2)\); Time \(O(n)\),"CS::Bsc-Project, CS::distributed-systems, CS::leader-election"
xlXW4zny=L,What is the best case complexity for the Bully Algorithm for Leader Election?,"\(O(n)\), because it has to send a victory message no matter what.","CS::Bsc-Project, CS::distributed-systems, CS::leader-election"
m;!)jm9Su-,Why is the bully algorithm for leader election called the bully algorithm?,Because you “bully” processes with lower priority than you and ignore them.,"CS::Bsc-Project, CS::distributed-systems, CS::leader-election"
buo>#q]!~F,What is physical topology in distributed systems?,"Physical Topology in distributed systems is the placement of various nodes. The nodes in physical topology represent network nodes, routers, all end hosts (whether or not they’re participating). The edges represent all links, direct edges between end hosts.","CS::Bsc-Project, CS::distributed-systems"
o{/s)<o+24,What is logical topology in distributed systems?,"Logical Topology deals with the data flow in the network, i.e. how the data flows from one node to another. In logical topology, nodes are end hosts where applicatino executes, and edges are logical channels among these nodes.","CS::Bsc-Project, CS::distributed-systems"
Ppt0kn03~p,What is superimposed topology in distributed systems?,"Superimposed Topology is simply a topology overlay which is superimposed on Logical Topology. The goal is efficient information gathering, distirbution, or search.","CS::Bsc-Project, CS::distributed-systems"
HGScovX&E3,"When vieweing the topology of distributed systems, is it typically viewed as a directed or undirected graph?","Undirected graph in which the nodes represent processors, and the edges represent the links connecting the processors.","CS::Bsc-Project, CS::distributed-systems"
i1q:_@2g~M,What is Application Execution in the context of distributed systems?,Application Execution is comprised of the execution of instructions within the distributed program. Many instaces a Control Algorithm is also needed to be executed in order to monitor the application execution or to perform various auxiliary functions.,"CS::Bsc-Project, CS::distributed-systems"
k#~Ozn]X^&,What is the distributed control algorithm also sometimes termed as?,Protocol. Although the term protocol is also loosely used for any distributed algorithm.,"CS::Bsc-Project, CS::distributed-systems"
GV`H)JQQ5i,What is a centralized algorithm?,One in which a predominant amount of work is performed by one (or possibly a few) processors. Whereas the other processors play a relatively smaller role in accomplishing the joint task. ,"CS::Bsc-Project, CS::distributed-systems"
/-!CKZT9N,What is a distributed algorithm?,"A distributed algorithm is one in which each processor plays an equal role in sharing the message overhead, time overhead and space overhead.","CS::Bsc-Project, CS::distributed-systems"
LSzBs{Sub7,What is a symmetric algorithm?,A symmetric algorithm is an algorithm in which all the processors execute the same logical functions. ,"CS::Bsc-Project, CS::distributed-systems"
hWPK=K2`22,What is an assymetric algorithm?,An assymetric algorithm is an algorithm in which different processors execute logically different (but perhaps partly overlapping) functions.,"CS::Bsc-Project, CS::distributed-systems"
"b2ka3)P,uS",Is a centralized algorithm symmetric or assymetric?,A centralized algorithm will always be assymetric. Any algorithm that is not fully distributed must be assymetric.,"CS::Bsc-Project, CS::distributed-systems"
d^w/3^I18-,What is a uniform algorithm?,A uniform algorithm is an algorithm that does not use the number of processes in the system a a parameter in its code.,"CS::Bsc-Project, CS::distributed-systems"
mZVTJ=?zGc,Why is a uniform algorithm desirable?,"Because it allows scalability, transparency, and processes can join or leave the dsitributed execution without intruding on the other processes, except its immediate neighbours that need to be aware of any changes in their immediate topology.","CS::Bsc-Project, CS::distributed-systems"
O4+UsTZoRc,What are adaptive algorithms?,"Adaptive algorithms are algorithms that can be expressed in terms of the number of nodes ""participating"" in a particular problem context, rather than in terms of the total number of nodes in the system. In other words, if an algorithm can be expressed in terms of the number of nodes that are relevant to solving a particular problem, rather than in terms of the total number of nodes in the system, then it is considered to be an adaptive algorithm. This allows the algorithm to scale more efficiently and effectively, since it can be tailored to the specific problem context at hand.","CS::Bsc-Project, CS::distributed-systems"
pCX^MjOUGw,What is a deterministic receive?,Deterministic receive is a primitive which specifies the source from which it wants to receive a message.,"CS::Bsc-Project, CS::distributed-systems"
DtmZRnL(/i,What is a non-deterministic receive?,"A non-deterministic receive is a primitive which can receive a message from any source – the message delivered to the process is the first message that is queued in the local incoming buffer, or the first message that comes in subsequently if no message is queued in the local incoming buffer.","CS::Bsc-Project, CS::distributed-systems"
EN<`Z*j7qP,When does a distributed program have a deterministic execution?,When the distributed program contains no non-deterministic receives.,"CS::Bsc-Project, CS::distributed-systems"
fRCa=e_``^,When does a distributed program have a non-deterministic execution?,If a distributed program contains at least one non-deterministic receive primitive.,"CS::Bsc-Project, CS::distributed-systems"
"P=cI<N!,tz",What is the difference between a determinsitic receive and a non-deterministic receive?,"A deterministic receive primitive in a distributed system specifies the source from which it wants to receive a message, while a non-deterministic receive primitive can receive a message from any source. ","CS::Bsc-Project, CS::distributed-systems"
"E}[1],2bd1",When is a protocol non-inhibitory?,If no system event is disabled in any execution of the protocol.,"CS::Bsc-Project, CS::distributed-systems"
kHfVu/C*S8,When is a protocol inhibitory?,If a system event is disabled in any exeuction of the protocol,"CS::Bsc-Project, CS::distributed-systems"
K1U^goi~Ic,What are locally delayed disabled events?,"In a protocol execution, a disabled event is said to be locally delayed if it is currently disabled, but could become enabled in the future if some additional system event occurs and there is no intervening receive event.","CS::Bsc-Project, CS::distributed-systems"
Ov:q)3CFqZ,When is a protocol locally inhibitory?,"A protocol is locally inhibitory if any disabled event in any execution of the protocol is locally delayed, meaning that the delay in the event's activation is under the control of the local processor.","CS::Bsc-Project, CS::distributed-systems"
C~ZN5E;Ab:,When is a protocol globally inhibitory?,"A protocol is globally inhibitory if there is at least one execution in which some delayed event is not locally delayed, meaning that the delay in the event's activation requires communication from another processor.","CS::Bsc-Project, CS::distributed-systems"
ld9@r%6p?i,What are the different types of inhibitory protocols?,"The different types of inhibitory protocols are: send inhibitory, receive inhibitory, and internal event inhibitory.","CS::Bsc-Project, CS::distributed-systems"
Ikw7>2e+T:,When is a protocol send inhibitory?,A protocol is send inhibitory if some delayed events in the protocol are send events.,"CS::Bsc-Project, CS::distributed-systems"
lC_i#`wSEM,When is a protocol receive inhibitory?,A protocol is receive inhibitory if some delayed events in the protocol are receive events.,"CS::Bsc-Project, CS::distributed-systems"
vDW5S~&*O&,When is a protocol internal event inhibitory?,"A protocol is internal event inhibitory if some delayed events in the protocol are internal events, such as state transitions or other internal actions.","CS::Bsc-Project, CS::distributed-systems"
fTkbcjxR^-,Are distributed systems synchronous or asynchronous?,Distributed systems are inherently asynchronous.,"CS::Bsc-Project, CS::distributed-systems"
l_k#:Mwc]i,What is an on-line algorithm?,An on-line algorithm is an algorithm that executes as the data is being generated.,"CS::Bsc-Project, CS::distributed-systems"
M{8p|!@QPH,What is an off-line algorithm?,An off-line algorithm is an algorithm that requires all the data to be available before algorithm execution begins.,"CS::Bsc-Project, CS::distributed-systems"
w_T5`gpTyE,What is a failure model in distributed systems?,A model that specifies the manner in which the components of the system may fail.,"CS::Bsc-Project, CS::distributed-systems"
rR{5:Oz/g+,What does it mean if a system is t-fault tolerant?,If it continues to satisfy its specified behavior as long as no more than t of its components (whether processes or links or a combination) fail.,"CS::Bsc-Project, CS::distributed-systems"
ptcqEeVIB?,What is the fail-stop process failure model?,"In the Fail-stop failure model, a process may fail by stopping execution from some instant thenceforth, but other processes can learn of the failure. This model provides an abstraction, the exact mechanism by which other processes learn of the failure can vary.","CS::Bsc-Project, CS::distributed-systems"
MAj~4g@F/:,What is crash failure model?,"In the Crash failure model, a process may fail by stopping to function from any instance, but other processes do not learn of this crash.","CS::Bsc-Project, CS::distributed-systems"
q|Lvv;CGSj,What is receive omission failure model?,"In the Receive Omission failure model, a process may fail by intermittently receiving only some of the messages sent to it or by crashing.","CS::Bsc-Project, CS::distributed-systems"
bQk_lR?sBy,What is send omission failure model?,"In the Send Omission failure model, a process may fail by intermittently sending only some of the messages it is supposed to send, or by crashing.","CS::Bsc-Project, CS::distributed-systems"
JqzV_j!*zr,What is general omission failure model?,"In the General Omission failure model, a process may fail by exhibiting either or both of send omission and receive omission failures.","CS::Bsc-Project, CS::distributed-systems"
BCW1UUjwe},What is Byzantine or malicious failure model with authentication?,"In the Byzantine or Malicious Failure, with authentication model, a process may exhibit any arbitrary behavior. However, if a faulty process claims to have received a specific message from a correct process, then that claim can be verified using authentication, based on unforgeable signatures.","CS::Bsc-Project, CS::distributed-systems"
L9>m;vPmt5,What is Byzantine or malicious failure model without authentication?,"In the Byzantine or Malicious Failure model, the same as the Byzantine or Malicious Failure with authentication model, except without authentication to verify any claims made.","CS::Bsc-Project, CS::distributed-systems"
F!wbUY8Jo~,What is a wait-free algorithm?,A wait-free algorithm is an algorithm in which a failure of suspension of any process cannot cause failure or suspension of another process.,"CS::Bsc-Project, CS::distributed-systems"
