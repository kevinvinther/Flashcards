guid,front,back,tags
r(kAlWqq|^,What is Just In Time compilation? (JIT),Compilation during runtime. Combines the speed of compiled code with the flexibility of interpretation.,"CS::PLChapter01, CS::PLMisc, CS::programming-languages"
C*qF8j!ItW,What is the downside of JIT?&nbsp;,There is a delay in the initial execution,"CS::PLChapter01, CS::PLMisc, CS::programming-languages"
Btw)&6`CVA,What is Static Analysis?&nbsp;,Analysis of the source code without executing the program,"CS::PLChapter01, CS::programming-languages"
M]|1YiZ.EG,When is a function computable?&nbsp;,When there exists a program which computes it.&nbsp;,"CS::PLChapter01, CS::programming-languages"
PBzRMLG{%;,"Which is used more in practice, compilation or interpretation?&nbsp;",A combination of both.,"CS::PLChapter01, CS::programming-languages"
Q3H[%L#RrH,What is partial evaluation?&nbsp;,A partial evaluator is like a across between an interpreter and a compiler. The partial evaluator will take input and only evaluate the parts of the program the depend on those inputs.&nbsp;,"CS::PLChapter01, CS::programming-languages"
sqaKLYU3s#,What is an interpreter?&nbsp;,"Program that interprets instructions. Fetch-decode-execute. When a language is interpreted, the program runs from the interpreter.&nbsp;","CS::PLChapter01, CS::programming-languages"
h_^Av]9v*.,What is the difference between a compiler and an interpreter?&nbsp;,"A compiler is faster, but less flexible, and an interpreter is slower but more flexible. Compilers will not compile if there is an error in the code, while an interpreter will stop if there is a code. Interpreters also don't generate executables","CS::PLChapter01, CS::programming-languages"
"tPibE,E9T4",How does a partial evaluator work?&nbsp;,"It reads some source code, then builds an abstract syntax tree from which it reads some of the inputs to the program and analyses the program to see when the inputs provided are used in the program.&nbsp;","CS::PLChapter01, CS::programming-languages"
w5jwC1P1Yh,What is an abstract machine?&nbsp;,An abstract machine is a set of data structures and algorithms that can store and run programs. An abstraction of a physical computer.&nbsp;,"CS::PLChapter01, CS::programming-languages"
eOgPlE9>HP,What is the name of the technique that consists of evaluating a program against an input to produce a program that is more efficient than the original,Partial Evaluation,"CS::PLChapter01, CS::programming-languages"
ok61?m![xo,What is a compiler?&nbsp;,"A compiler is a program that is used for translation to target machine code. A compiler directly translates to the machine code and generates an intermediate file, which acts as an executable that you can run.&nbsp;","CS::PLChapter01, CS::programming-languages"
B4Bu>BSvW.,What is the first step of an interpreter’s execution cycle?,Fetching the next instruction to execute from memory,"CS::PLChapter01, CS::programming-languages"
u}4wiz5ft),When were low-level languages used to program the first computers?,1940s,"CS::PLChapter01, CS::programming-languages"
nBRG#83C}w,What is the program that translates assembly to machine code called? ,Assembler,"CS::PLChapter01, CS::programming-languages"
ye-[Vv4YUz,What is OpCode?,A unique code which identifies one of the primitive operations defined by the machine’s hardware,"CS::PLChapter01, CS::programming-languages"
"Q,p8I?Ug)-",The operations for processing primitive data are implemented by what?,ALU (Arithmetic-logic unit),"CS::PLChapter01, CS::programming-languages"
wkbn+(h|_D,What was the most famous computer on which microprogramming was used? ,IBM 360,"CS::PLChapter01, CS::programming-languages"
"icb,G{}V*1",What is the term used for simulation using microprogramming?,Emulation,"CS::PLChapter01, CS::programming-languages"
L#33:g~Z{w,"In real language implementations, is compilation or interpreation usually used?",Both elements are almost always present.,"CS::PLChapter01, CS::programming-languages"
Rb!M0#(`qQ,What kind of machine is the Java Virtual Machine and its bytecode language an example of?,An intermediate machine,"CS::PLChapter01, CS::programming-languages"
QWe78_n$KT,What happens in the <b>Design of Language </b>stage?,"Bindings between primitive constants, types and operations of the language are defined (for example, + indicates addition, and int denotes the type of integers etc.)","CS::PLChapter02, CS::programming-languages"
f2.@I3kq`G,Does there exist programs which are not computable?&nbsp;,The undecidability of the halting problem assures us that there exist functions which are not computable.,"CS::PLChapter03, CS::programming-languages"
e7|HhnD)PJ,How can a program take another program as an input and determine if it terminates?&nbsp;,It can't.,"CS::PLChapter03, CS::programming-languages"
"J04,!w[Eu)",What is the halting problem?&nbsp;,The halting problem is a problem which states that no program can be written to predict whether or not any other program halts after a finite number of steps.,"CS::PLChapter03, CS::programming-languages"
MwnXMpSC*G,<p>Where is a declaration local to a block visible?</p>,<p>That block and all the blocks nested within it</p>,"CS::PLChapter04, CS::programming-languages"
fJKMQEN~|),When does the environment change?&nbsp;,On the entry and exit of a block.,"CS::PLChapter04, CS::programming-languages"
GsFM~Kf->$,What are Denotable Objects?&nbsp;,"Objects to which a name can be given.<div>Here is a non-exhaustive list:&nbsp;</div><div><br><ul><li>Objects whose names are defined by the user: Variables, formal parameters, procedures, user-defined types, labels, modules, user-defined constants, exceptions</li><li>Objects whose names are defined by the programming language: primitive types, primitive operations, predefined constants</li></ul></div>","CS::PLChapter04, CS::programming-languages"
mrD%]O0GfN,<p>When are changes in the environment produced?</p>,<p>At entry and exit from a block</p>,"CS::PLChapter04, CS::programming-languages"
f$sC~2nY:R,Which programming languages are turing complete (meaning they can compute the same set of functions as those computed by a Turing Machine)?,Every general purpose programming language,"CS::PLChapter04, CS::programming-languages"
"D>.keg{,:[",Take the following example: (c-like)<div>{</div><div>&nbsp; &nbsp; int a = 2;&nbsp;</div><div>&nbsp; &nbsp; {...}</div><div>}</div><div>To who is <i>a</i>&nbsp;visible?&nbsp;</div>,"The block it has been declared in, as well as all blocks listed within it, unless there is a new declaration of the same name in that same block.&nbsp;","CS::PLChapter04, CS::programming-languages"
P<&2N$-{/`,"If we have a variable, <i>integer a = 10</i>, do we know whether the name and the object are the same?&nbsp;",The name and the object they denote are never the same. No matter if it's a function or a variable or anything else.&nbsp;,"CS::PLChapter04, CS::programming-languages"
n(-F/dTV54,<p>What is the difference between static and lexical scope?</p>,<p>They are two words for the same thing</p>,"CS::PLChapter04, CS::programming-languages"
v5G4OXS6v+,What are names?&nbsp;,Sequence of characters used to denote something. E.g.&nbsp;<div>int name = 2</div><div>const pi = 3.14&nbsp;</div>,"CS::PLChapter04, CS::programming-languages"
"H*4,}t+O0[",<p>Which functionality manages the allocation of memory for programs and for data?</p>,<p>Interpreter</p>,"CS::PLChapter05, CS::programming-languages"
t9OZuQAs2W,"<p>A stack uses which scheme, LIFO, FIFO or FILO?</p>",<p>LIFO</p>,"CS::PLChapter05, CS::programming-languages"
l_@=3q_+x!,<p>What is the difference in an activation record for a procedure and for a function?</p>,<p>For functions the activation record must also keep tabs on the memory location in which the function stores its return value.</p>,"CS::PLChapter05, CS::programming-languages"
Hw$Sj9V4E5,"<p>A block A is entered, then a block B is entered, with the LIFO scheme, which block do we leave first?</p>",<p>B</p>,"CS::PLChapter05, CS::programming-languages"
HTh)/hF4$_,<p>What is the LIFO scheme?</p>,<p>Last in first out.</p>,"CS::PLChapter05, CS::programming-languages"
DAh63Hq2>f,<p>Is memory management a function of a compiler or interpreter associated with an abstract machine?</p>,<p>Interpreter</p>,"CS::PLChapter05, CS::programming-languages"
h!]pO$.Nx0,<p>When is static memory management performed and by what?</p>,Performed by the compiler before the exeuction starts.,"CS::PLChapter05, CS::programming-languages"
n[b_!<7Ck*,<p>How is the runtime management of the system stack implemented?</p>,<p>By code fragments which the compiler or interpreter inserts immediately before and after the call to a procedure or before the start and after the end of a block</p>,"CS::PLChapter05, CS::programming-languages"
xWgAsTM65n,"<p>What is the memory space allocated on the stack, dedicated to an in-line block or to an activation of a procedure called?</p>",<p>The activation record or frame.</p>,"CS::PLChapter05, CS::programming-languages"
gTB9g6Jo{F,<p>What does the structure of a generic activation record for an in-line block hold?</p>,"<p>Dynamic chain pointer, local variables and intermediate results</p>","CS::PLChapter05, CS::programming-languages"
b9@^!O:`{f,<p>What are intermediate results in an in-line block of an activation record?</p>,"<p>Results which are only needed for something else. For example b = (a + x) / (x + y), a+x and x+y will be calculated and stored before they are divided (depending on the compiler).</p>","CS::PLChapter05, CS::programming-languages"
fyH06kVpT%,<p>What is a procedure?</p>,<p>An independent code module that fulfils some concrete task and is referenced within a larger body of source code</p>,"CS::PLChapter05, CS::programming-languages"
"qD(n~jq||,",<p>Where does statically allocated memory objects reside?</p>,"<p>In a fixed zone of memory which is determined by the compiler, <strong>and they remain there for the entire duration of the program's execution.</strong></p>","CS::PLChapter05, CS::programming-languages"
MCpjP/qbyw,"<p>Are <em>constants, object code and global variables</em> usually statically or dynamically allocated?</p>",<p>Statically</p>,"CS::PLChapter05, CS::programming-languages"
y*zoMgn_7>,<p>What does the dynamic chain pointer store? (recall: in-line block of a generic activation record)</p>,<p>A pointer to the previous activation record on the stack (or to the last activation record created).</p>,"CS::PLChapter05, CS::programming-languages"
d(sgi<^BWa,<p>What does it mean that we are using a stack for memory purposes?</p>,<p>We use them to push activation records or frames.</p>,"CS::PLChapter06, CS::programming-languages"
Dc_FXvXeF`,<p>Why do we need memory?</p>,<p>To store the state of the program</p>,"CS::PLChapter06, CS::programming-languages"
ebT8z5&03@,"<p>Why do we need a stack for dynamic memory, instead of just dumping everything in memory?</p>","<p>We need it for recursion. With recursion we cannot allocate all possible blocks, but we can with a stack.</p>","CS::PLChapter06, CS::programming-languages"
o2IfS+(fK|,<p>How do we implement static scoping?</p>,"<p>We are using the static chain pointer. The compiler adds this pointer to the previous ""father"" block, which contains the known local variable.</p>","CS::PLChapter06, CS::programming-languages"
fK.}{BxeiW,<p>What is an expression?</p>,"<p>A syntactic entity whose evaluation yields a value or does not end, in which case the expression is undefined. There are three main notations, infix, prefix and postfix.</p>","CS::PLChapter06, CS::programming-languages"
N+^H(RU^x{,<p>What are side effects?</p>,<p>Changing the state of computation without returning a value</p>,"CS::PLChapter06, CS::programming-languages"
N(|zBpUv8d,<p>When was if then else introduced?</p>,<p>In ALGOL 60</p>,"CS::PLChapter06, CS::programming-languages"
"gV,DWiLw3B",<p>Why do we not use goto anymore?</p>,<p>It makes the code harder to read</p>,"CS::PLChapter06, CS::programming-languages"
xcgQSj>F4R,<p>What kinds of data structures are we using in memory management ?</p>,<p>Stack and the heap</p>,"CS::PLChapter06, CS::programming-languages"
"xp,^^YRsu;",<p>What is call by result?</p>,"<p>Opposite of value. The value of the result is returned and modified, but is not a reference. foo(result y) {y + 1}, then y would be y + 1 from here on.</p>","CS::PLChapter07, CS::programming-languages"
DhIz*:N2M},<p>Why do we care about tail recursion?</p>,<p>It's faster</p>,"CS::PLChapter07, CS::programming-languages"
HW3uWc;KrQ,<p>What happens to the variable inside of a function using call by result after the function is done running?</p>,<p>It is destroyed (removed from the stack)</p>,"CS::PLChapter07, CS::programming-languages"
fn%_wEb)1:,<p>Why do we care about expressions?</p>,<p>Because we want to compute stuff</p>,"CS::PLChapter07, CS::programming-languages"
PS3YLngzGA,<p>What are the two main ways that parameters are passed?</p>,<p>By value and by reference</p>,"CS::PLChapter07, CS::programming-languages"
"t)X;wr,<sE","<p>You can call by value and by reference, but what else?</p>","<p>Constant, Result, name and value-result</p>","CS::PLChapter07, CS::programming-languages"
fx?@B?p<}j,<p>Can you do lazy evaluation if you evaluate right-to-left?</p>,<p>No</p>,"CS::PLChapter07, CS::programming-languages"
^z%]d;xC],<p>What is type equivalence by name?</p>,"<p>Two types are equivalent if they have the same name. Used in Pascal, Ada and Java</p>","CS::PLChapter08, CS::programming-languages"
t}Q]l01s]c,<p><em>Type LessThan = 0..9</em> is an example of which type?</p>,<p>Intervals</p>,"CS::PLChapter08, CS::programming-languages"
Pz:$W0kfI{,<p>What is a data type?</p>,<p>A collection of values (homogeneous and effectively represented (can be visualized)) equipped with a set of operations to manipulate these values.</p>,"CS::PLChapter08, CS::programming-languages"
IOwI?/=Rmb,<p>What defines what is a type and what is not a type?</p>,<p>The programming language.</p>,"CS::PLChapter08, CS::programming-languages"
P`oAr!de-:,<p>When were enumerations introduced?</p>,<p>In Pascal</p>,"CS::PLChapter08, CS::programming-languages"
FW%1:^1(/},<p>What is a scalar type?</p>,"<p>A type where values are not composed of aggregations of other values (e.g. boolean, chars).</p>","CS::PLChapter08, CS::programming-languages"
q;JDH67ctp,<p>What are the pros of call by value?</p>,<p>You don't have to worry about side-effects.</p>,"CS::PLChapter08, CS::programming-languages"
y;;awQ0W$H,<p>How many categories of types are there?</p>,"<p>Two, scalar types (or simple types) and composite types.</p>","CS::PLChapter08, CS::programming-languages"
dmadz[/TsP,<p>When are two types equivalent?</p>,<p>If each object of type T1 is also an object of type T2 and vice versa. T1 is compatible with T2 if an object of T1 can appear where a T2 would be expected.</p>,"CS::PLChapter08, CS::programming-languages"
tKu>S7Y1N],<p>When were intervals (subranges) introduced?</p>,<p>In Pascal</p>,"CS::PLChapter08, CS::programming-languages"
k=]lM9S-7#,<p>What is the particularity of call by constant?</p>,"<p>It's read only. The implementation depends on the compiler, it can be like passing by value or reference</p>","CS::PLChapter08, CS::programming-languages"
H<NP|G`V{H,<p>How many ways of passing parameters are there?</p>,"<p>6, Call by value, reference, result, result-value, constant and name</p>","CS::PLChapter08, CS::programming-languages"
lNJH^2fBV/,<p>What are composite types?</p>,"<p>Types obtained by combining other types with appropriate constructors (e.g. string, pointer, struct).</p>","CS::PLChapter08, CS::programming-languages"
Fg6cBhSKFJ,<p>What are the pros of call by reference?</p>,<p>You don't have to copy anything</p>,"CS::PLChapter08, CS::programming-languages"
s~d2Xi[fXh,<p>Are enumerations ordered or unordered?</p>,<p>Ordered</p>,"CS::PLChapter08, CS::programming-languages"
LvIgk)[_vC,<p>What is the difference between an exception and an error?</p>,"<p>An Error ""indicates serious problems that a reasonable application should not try to catch."" An Exception ""indicates conditions that a reasonable application might want to catch.""</p>","CS::PLChapter08, CS::programming-languages"
PS1h8>Fkk1,<p>What is the idea of <em>finally</em>?</p>,<p>To have a block that will be executed no matter what in a try block.</p>,"CS::PLChapter08, CS::programming-languages"
vup-wjEFX>,What was the first high-level programming language designed for computers? (Not implemented),Plankalkül (Plan Calculus) in 1942-1945 by Konrad Zuse,"CS::PLChapter13, CS::programming-languages"
oi2g)v.Er>,Which programming language introduced the use of <i>blocks</i>?,Algol60,"CS::PLChapter13, CS::programming-languages"
K-JJetuV;u,Why is lisp significant?&nbsp;,"It was the first functional programming language, as well as the only programming language for artificial intelligence for years.&nbsp;","CS::PLChapter13, CS::programming-languages"
g2u?h?$OZ(,Which was the first <b>effectively implemented </b>high-level programming language?&nbsp;,Fortran in 1956,"CS::PLChapter13, CS::programming-languages"
EkM#z>|}ER,What was the first programming language?&nbsp;,Fortran,"CS::PLChapter13, CS::programming-languages"
x6ai]ik79^,When did Charles Babbage invent the Analytical Engine?&nbsp;,1837,"CS::PLChapter13, CS::programming-languages"
kV4*Pquyrg,What are Lisps sucessors?&nbsp;,"Miranda, ML, Haskell","CS::PLChapter13, CS::programming-languages"
m<&Um2=8JI,What is (was) the use-case of cobol?&nbsp;,Business-oriented computations. It has a very strict program organization and poor control structures.&nbsp;,"CS::PLChapter13, CS::programming-languages"
j}R_QC.`XQ,Who invented the Analytical Engine?&nbsp;,Charles Babbage,"CS::PLChapter13, CS::programming-languages"
qb<Otz{f=:,"What programming style (Imperative, Functional, Declarative, Functional Logic) is Prolog?&nbsp;",Declarative,"CS::PLChapter13, CS::programming-languages"
F|vXWC~mbq,What is Java originally designed for?&nbsp;,"Internet programming, but is a general-purpose language.&nbsp;","CS::PLChapter13, CS::programming-languages"
"jCQu(G],B!",What did fortran introduce?,"<ul>
<li> Variables</li><li>Loops</li><li>Procedures</li><li>Statement labels</li><li>Much more</li>
</ul>","CS::PLChapter13, CS::programming-languages"
"O1,kiPfomf",Where would Fortran still be used?&nbsp;,In engineering applications that require much array manipulation,"CS::PLChapter13, CS::programming-languages"
y1PV3lkB4p,What is significant about <b>basic</b>?,It's the first programming language for personal computers.&nbsp;<div>It's also designed to be easy to learn (however not anymore).</div>,"CS::PLChapter13, CS::programming-languages"
m_22H>vv<?,What did Simula 67 introduce?&nbsp;,<b>Object Orientation: </b>classes and encapsulation,"CS::PLChapter13, CS::programming-languages"
"x%eFD~^7G,",What was the predecessor of Smalltalk and C++?&nbsp;,Simula 67,"CS::PLChapter13, CS::programming-languages"
ej}1peF0Ek,What is Pascal (1970) a sucessor to?&nbsp;,Algol60. It is conceptually simplified and cleaned up,"CS::PLChapter13, CS::programming-languages"
C8/ohCLb*U,What was the first functional programming language?&nbsp;,Lisp (1958),"CS::PLChapter13, CS::programming-languages"
tF7pBMF?;T,What is significant about Prolog (1972)?,It has an important role in Artificial Intelligence.&nbsp;<br>It is intended primarily as a declarative programming language.<div>Logic is expressed as relations</div>,"CS::PLChapter13, CS::programming-languages"
l?*{U]4Lu;,What connection does Simula 67 have to Algol 60?,It's an extension of Algol 60 designed for concurrent processes&nbsp;,"CS::PLChapter13, CS::programming-languages"
ND9LD-W2Mj,What is the difference between C (1972) and C++ (1980)?&nbsp;,C++ is an <i>object-oriented</i>&nbsp;extension of the imperative language <i>C. </i>Designed in 1980.,"CS::PLChapter13, CS::programming-languages"
uvXa>JsjH/,What did algol60 introduce?,"<ul>
<li>Block Structure</li><li>Recursion</li><li>a <i>formal definition</i></li>
</ul>","CS::PLChapter13, CS::programming-languages"
"MD{qv,Mhk3",Why is cobol still used?&nbsp;,For maintenance of legacy business applications.&nbsp;,"CS::PLChapter13, CS::programming-languages"
QOC~Xi>H@S,What is <i>the fundamental cycle?&nbsp;</i>,Fetch-decode-execute,"CS::PLMisc, CS::programming-languages"
d@^+yPA.>;,What is the part of the description of the language which seeks to answer the question of what does a correct phrase mean?,Semantics,"CS::PLChapter02, CS::programming-languages"
dY=PLY#VSp,What is the part of a language description which asks itself “how do we use a meaningful sentence?”,Pragmatics,"CS::PLChapter02, CS::programming-languages"
tCv%Vyrfae,Who developed techniques to describe syntactic phenomena in a formal manner?,Noam Chomsky,"CS::PLChapter02, CS::programming-languages"
ilP%Evl0p,What is a fundamental device for the description of programming languages?,context-free grammar,"CS::PLChapter02, CS::programming-languages"
p)0~:&u65b,What is the aim of lexical analysis?,to read the symbols (characters) forming the program sequentially from the input (and generate any errors if needed),"CS::PLChapter02, CS::programming-languages"
MtkRrCLut7,What is a very simple operation that scans the input text of the source program from left to right?,Lexical analysis,"CS::PLChapter02, CS::programming-languages"
q(HNq|hFB4,What do most official programming language definitions use for their semantic description?,natural language,"CS::PLChapter02, CS::programming-languages"
I4a>t0hsd3, Semantics is a relation between what?,signs (correct sentences) and meanings,"CS::PLChapter02, CS::programming-languages"
C.MP/vuoL<, What determines the correct sentences with which a recipe is expressed?,The syntax,"CS::PLChapter02, CS::programming-languages"
"J),`FPD9Ul", What does Chomsky use to limit the ambiguity that is always present in language?,formalisms,"CS::PLChapter02, CS::programming-languages"
i$]@#.3@PG, What is a fundamental tool for describing the syntax of programming languages?,generative grammar,"CS::PLChapter02, CS::programming-languages"
e|jMzA44kS, What are Context-Free Grammars?,a notation for the concise and precise expression of recursive definitions of strings,"CS::PLChapter02, CS::programming-languages"
csQpmZ:xHR," In the context of programming languages, context-free grammars were used for the first time in the definition of what language?",Algol60,"CS::PLChapter02, CS::programming-languages"
s|!}2:y~[~, What is BNF?,Backus Naur normal form,"CS::PLChapter02, CS::programming-languages"
K2p|D2yNH2,Is a derivation tree ordered or unordered?,Ordered,"CS::PLChapter02, CS::programming-languages"
"lFj:Gi,3U]", What are nodes without children?,leaves,"CS::PLChapter02, CS::programming-languages"
uZg5=6R<s(, Who introduced the Turing Machine language in the 1930s?,Alan M. Turing,"CS::PLChapter03, CS::programming-languages"
e[}zNL04Db, What is a Turing machine composed of?,an infinite tape,"CS::PLChapter03, CS::programming-languages"
oIXl*Af!=:, Alonzo Church proposed a principle in the mid-1930s that states exactly what?,It states that a function on the natural numbers can be calculated by an effective method if and only if it is computable by a Turing machine. This is known as the church thesis.,"CS::PLChapter03, CS::programming-languages"
vW;wE((]q;,What is a program that can determine whether a program can generate a division by zero error during execution?,a static analyser,"CS::PLChapter03, CS::programming-languages"
M7SY40#.W*,What is the name of the machine that computes every intuitively computable function?,Turing Machine,"CS::PLChapter03, CS::programming-languages"
B6WDrpP*G5,Church's Thesis is a philosophical principle that the computer science community assumes that it will not be discredited by what new computational paradigm?,quantum computing,"CS::PLChapter03, CS::programming-languages"
qRufkF+^YH," What is nothing more than a sequence of characters used to represent, or denote another object?",A name,"CS::PLChapter04, CS::programming-languages"
o;(n)g8caL," When we define a name using a variable, we introduce a symbolic identifier for what?",a memory location,"CS::PLChapter04, CS::programming-languages"
D1C>c?iLMp,"If we define a variable <i>fie</i> and assign it the value of 2, where weill the value be stored?",the location reserved for the variable named fie,"CS::PLChapter04, CS::programming-languages"
P%.:bBi?4w,Why do we use names/what does the use of names avoid?,The need to bother with whatever the location is,"CS::PLChapter04, CS::programming-languages"
yyex^}GO]@, How must the correspondence between name and memory location be guaranteed?,by the implementation,"CS::PLChapter04, CS::programming-languages"
uLM9%EV]%p, What is the part of the implementation responsible for the associations between names and objects that they denote?,The environment,"CS::PLChapter04, CS::programming-languages"
HS*=C;Dh1), What is the component of the abstract machine that allows the determination of what the correct association is?,environment,"CS::PLChapter04, CS::programming-languages"
y6s|-0_}^$,Does the environment exist at the level of the physical machine?,No,"CS::PLChapter04, CS::programming-languages"
L>]m0-`W(X, What is a structuring method for programs introduced by ALGOL60?,blocks,"CS::PLChapter04, CS::programming-languages"
w2EI:XCRjJ, What are the start- and end-block constructs for languages in the ALGOL family?,begin ... end,"CS::PLChapter04, CS::programming-languages"
PiW-O(0.ty, What are the start- and end-block constructs for Java?,{…},"CS::PLChapter04, CS::programming-languages"
jdHy~qmb*L, A block's environment is composed of associations between names declared locally to what?,the block itself,"CS::PLChapter04, CS::programming-languages"
xTg&$*Hq3?," In most languages allowing blocks, what can be nested?",blocks,"CS::PLChapter04, CS::programming-languages"
qA2l}}B9T{, How can blocks be nested?,"In most languages allowing blocks, blocks can be nested; that is, the definition of one block can be wholly included in that of another","CS::PLChapter04, CS::programming-languages"
GXh=v}]`fW, What does the new declaration hide in the block that contains the redefinition?,the previous one,"CS::PLChapter04, CS::programming-languages"
"IEJI5:J,:`", When will the association of a variable from a block be reactivated?,on exit from the inner block,"CS::PLChapter04, CS::programming-languages"
"zo#t6?$=o,", What are visibility rules also called?,scope rules,"CS::PLChapter04, CS::programming-languages"
qc(o|!?u{2,“The rule of nearest nested scope” is a term used to describe which scope rule?,Static scope,"CS::PLChapter04, CS::programming-languages"
lk#F+_>A+g, When was the static scope rule introduced?,ALGOL60,"CS::PLChapter04, CS::programming-languages"
B1lsO}A_o7, What type of scope rule is typically used by the most important programming languages?,Static Scope,"CS::PLChapter04, CS::programming-languages"
KyKJf--vC@, What is the scope rule that is easiest to implement?,Dynamic Scope,"CS::PLChapter04, CS::programming-languages"
DW=$:668k@,What is a name?,a (possibly meaningful) sequence of characters used to represent some other thing,"CS::PLChapter04, CS::programming-languages"
coU<<4$Dm@,What term denotes the entire period of time between starting and termination of a program?,Runtime,"CS::PLChapter04, CS::programming-languages"
C!p&]f.WmQ,What is the environment formed from associations created when the program's execution began?,Global environment,"CS::PLChapter04, CS::programming-languages"
rB=Fo=S#2x,What happens when a block is exited?,associations for names declared locally to the block and the objects they denote are destroyed,"CS::PLChapter04, CS::programming-languages"
gNpX]CKQt.,What is a situation in which an object is possible to access an object whose memory has been reallocated?,a dangling reference,"CS::PLChapter04, CS::programming-languages"
I^$7JzW*F], What are some elements for which it is possible to allocate memory statically?,global variables,"CS::PLChapter05, CS::programming-languages"
sM8FwDi4N?,Does a language with only static memory allocation support recursion?,No,"CS::PLChapter05, CS::programming-languages"
"ON,UM$,6+l"," What did the first versions of FORTRAN use, static or dynamic memory allocation?",static memory allocation,"CS::PLChapter05, CS::programming-languages"
ws@zY~W_d^," Intermediate results, local variables, and dynamic chain pointer are fields of what?",activation record,"CS::PLChapter05, CS::programming-languages"
de>Q8XKqwR, What does a function return when it terminates its execution?,a value to the caller,"CS::PLChapter05, CS::programming-languages"
sFMP0vA6@B, Activation records are stored on and removed from the stack at what time?,runtime,"CS::PLChapter05, CS::programming-languages"
mW3cTJJ!9c, What do we use to indicate the program or procedure that performs a call and the procedure that has been called?,"caller"" and ""callee""","CS::PLChapter05, CS::programming-languages"
eQ0+=4Tk]L, What is the definition of a heap that we use here (in memory) has nothing to do with this data structure?,a heap is simply an area of memory in which blocks of memory can be allocated and deallocated relatively freely,"CS::PLChapter05, CS::programming-languages"
bH{WKAT05h, What happens when a block of size strictly larger than the requested by the program is allocated?,internal fragmentation,"CS::PLChapter05, CS::programming-languages"
nsb!9Lv8.j,What type of management is a Heap?,Dynamic Management,"CS::PLChapter05, CS::programming-languages"
ec0QL#th6J, When did the first electronic computers appear?,second half of the 1940s,"CS::PLChapter13, CS::programming-languages"
c>upbMk~h, Data and program were initially represented on what type of cards?,punched cards,"CS::PLChapter13, CS::programming-languages"
t<y~Rp[COX,What was the first programming language that introduced expressions such as a * 2 + b ?,Fortran,"CS::PLChapter13, CS::programming-languages"
KiaSmDe~h&,How many kinds of environments are there?,"Two, local and global","CS::PLChapter13, CS::programming-languages"
L9M{x9gJZ/,What does ALGOL stand for?,ALGOrithmic language,"CS::PLChapter13, CS::programming-languages"
y:VRsoG#Ih,When were imperative languages introduced?,In the end of the 1950s,"CS::PLChapter13, CS::programming-languages"
wUt72(8+;|, What are context-free grammars now known as?,Backus Naur Form or BNF,"CS::PLChapter13, CS::programming-languages"
tRPLvIflqs, What is the acronym for COmmon Business Oriented Language?,COBOL,"CS::PLChapter13, CS::programming-languages"
I[a+Ra9^=_, What was the goal of the COBOL language?,producing a language that was specific to commercial applications and whose syntax was as close as possible to the English language,"CS::PLChapter13, CS::programming-languages"
o%+ToZ]|+Y," What was the first language to introduce the concepts of class, object, subtype and dynamic method dispatch?",Simula67,"CS::PLChapter13, CS::programming-languages"
fb/r;sGOiB, What language did the Pascal compiler translate into?,P-code,"CS::PLChapter13, CS::programming-languages"
mY[#ew`klC, What was the first commercial PC?,Apple II in 1978,"CS::PLChapter13, CS::programming-languages"
Q9T.O>e~Dy, Java uses what type of scope?,static,"CS::PLChapter13, CS::programming-languages"
zhq2XR>I?&, Java allows the dynamic loading of what?,classes,"CS::PLChapter13, CS::programming-languages"
B[BVtnM~-D, What is the essential characteristic of an expression that differentiates it from a command?,its evaluation produces a value,"CS::PLChapter06, CS::programming-languages"
Kg0mS)6FA<, How can expression syntax be precisely described?,by a context-free grammar,"CS::PLChapter06, CS::programming-languages"
qCv1pN%&ZG, What can be used to represent an expression internally inside a computer?,Tree structures,"CS::PLChapter06, CS::programming-languages"
"s;.,e!V0EM", How many main types of notation can we distinguish?,"three: infix, postfix, prefix","CS::PLChapter06, CS::programming-languages"
KDhoM7BKu/, What is another name for Postfix Notation?,Reverse Polish,"CS::PLChapter06, CS::programming-languages"
bmGwsE/D42," In imperative programming languages, expression evaluation is what?",side effects,"CS::PLChapter06, CS::programming-languages"
uz=o^$4OZ/, What are the two classes declarative languages are usually divided into?,functional and logic programming languages,"CS::PLChapter06, CS::programming-languages"
DmlH07{mVA, What is another name for short-circuit evaluation?,lazy evaluation,"CS::PLChapter06, CS::programming-languages"
B!M(986-:~," If the result type of a function is void, what does the function return?",no meaningful value,"CS::PLChapter07, CS::programming-languages"
rdi3dJ-P$X,"C and Java only allow one passing mechanism, which one? ",Passing by value,"CS::PLChapter07, CS::programming-languages"
s.nA/kTbZ-,What is the difference between formal parameters and actual parameters?,"Formal parameters appear in the definition of a function, actual parameters appear in the call.","CS::PLChapter07, CS::programming-languages"
J~}Tf7OWry,When is a parameter of input type?,If it allows communication which is only in the direction from the caller to the function.,"CS::PLChapter07, CS::programming-languages"
"eNQv,!No0G",When is a parameter of output type?,If it allows communication which is only in the direction from the function to the caller.,"CS::PLChapter07, CS::programming-languages"
K{wor;lmvq,When is a parameter of input/output type?,If it allows for bidirectional communication between the caller and callee (function).,"CS::PLChapter07, CS::programming-languages"
iCRs8dAC}h,What are l-values?, l-values are those values that usually indicate locations and therefore are the values of expressions that can be on the left of an assignment command.,"CS::PLChapter06, CS::programming-languages"
fa6!_eVh/R,What are r-values?," r-values are the values that can be stored in locations, and therefore are the values of expressions that can appear on the right of an assignment command","CS::PLChapter06, CS::programming-languages"
sRly|u=!KP,What is the relation between the formal parameter and the actual parameter in call by reference? ,The formal and the actual are two names for the same variable. Each modification of the formal parameter is a modification of the actual parameter. ,"CS::PLChapter07, CS::programming-languages"
NLP#$:H4]X,Can you do call by reference in c?,"No, but you can simulate it using pointers. ","CS::PLChapter07, CS::programming-languages"
IlF]0&a?md,What is a higher order function?,"A function which accepts functions as parameters, or returns a function. ","CS::PLChapter07, CS::programming-languages"
"Pi%,H_^=x8",How do you implement shallow binding?,Look for every names last association in the environment.,"CS::PLChapter07, CS::programming-languages"
"nFR_Pmt+;,","Which is harder to implement, shallow binding or deep binding?",Deep binding,"CS::PLChapter07, CS::programming-languages"
kY!K$(^^<f,What is an exception?,An event that is checked during the execution of a program and which must not (or cannot) be handled in the normal flow of control.,"CS::PLChapter07, CS::programming-languages"
M&`R=K-`DG,Deep binding requires what for implementation?,Auxiliary data structures,"CS::PLChapter07, CS::programming-languages"
BLp1x:q|)7,"When is a type system (and, by extension, a language) type safe? (also known as strongly typed)","When no program can violate the distinctions between types defined in that language. Basically Type safety means that the compiler will validate types while compiling, and throw an error if you try to assign the wrong type to a variable.","CS::PLChapter08, CS::programming-languages"
Pc}1Qw3}fF,When is a value denotable?,If it can be associated with a name.,"CS::PLChapter08, CS::programming-languages"
zj<-7G7ln-,When is a value expressible?,If it can be the result of a complex expression.,"CS::PLChapter08, CS::programming-languages"
b>lQ6^s5zn,When is a value storable?,If it can be stored in a variable.,"CS::PLChapter08, CS::programming-languages"
Lx7o(cf0?s,When does a program have static typing?,If its checking of type constraints can be conducted on the program text at compile time,"CS::PLChapter08, CS::programming-languages"
Q5u+psoXEu,When does a program have dynamic typing?,If its checking of type constraints can be conducted during runtime,"CS::PLChapter08, CS::programming-languages"
pJN&%dqq4w,Why are type errors undecidable?,"If the type cannot be reached (halting problem), there is no way to find the type error.","CS::PLChapter08, CS::programming-languages"
N.kMBb2d`C,What is the alternative to equivalence by name?,Structural Equivalence,"CS::PLChapter08, CS::programming-languages"
BzCoV4w`U0,When is a type definition transparent?,When the name of the type is just an abbreviation for the expression defining the type. ,"CS::PLChapter08, CS::programming-languages"
J)_{Zj=zlT,Do most languages use type equivalence by name or structural equivalence? ,A mix of both. Usually it depends on the type,"CS::PLChapter08, CS::programming-languages"
"b6Cfr,x4ms",When are two types compatible?,Type T is compatible with type S if a value of type T is permitted in any context in which a value of type S would be admissible. ,"CS::PLChapter08, CS::programming-languages"
Pl+(N6fHp5,What is type coercion?,"If a language allows compatibility between the types T and S, it also allows a value of type T to occur where a value of type S is expected. When this happens, the compiler inserts a type conversion between T and S.","CS::PLChapter08, CS::programming-languages"
c)-5z1(pf,What are explicit conversions? (or casts),Annotations in the language which specify that a value of one type must be converted to that of another type.,"CS::PLChapter08, CS::programming-languages"
u>@=DV>r`.,When is a type system monomorphic?,"When any language object (value, function, etc) has a unique type.","CS::PLChapter08, CS::programming-languages"
"cJuUBnc8,N",When is a type system polymorphic?,When the same object can have more than one type.,"CS::PLChapter08, CS::programming-languages"
C0~*d}]MP|,When is a name overloaded? (ad hoc polymorphism),When it corresponds to more than one object and context information must be used to determine which object is denoted by a specific instance of that name. ,"CS::PLChapter08, CS::programming-languages"
bb>q}4HPC?,When does a value exhibit universal parametric polymorphism?,When it has an infinite number of different types which can be obtained by instantiating a single schema of general type.,"CS::PLChapter08, CS::programming-languages"
LQc(1s9]pl,What is explicit polymorphism?,"Explicit annotations. For example generics in Java, or templates in C++","CS::PLChapter08, CS::programming-languages"
v{E9<k{c6Q,What is implicit polymorphism?,"The programmer need not provide any type indications and instead the type checker tries to determine for each object, the most general type from which the other types can be obtained by instantiation.","CS::PLChapter08, CS::programming-languages"
f:kw*^=x/@,When does a value exhibit subtype (or bounded) polymorphism?,"When there is an infinity of different types which can be obtained by instantiating a general type scheme, substituting for a parameter the subtypes of an assigned type.","CS::PLChapter08, CS::programming-languages"
P.=p|5rRi?,What is type inference?,the automatic detection of the type of an expression in a formal language,"CS::PLChapter08, CS::programming-languages"
r]sjLOa:tH,What is garbage collection?,"The process of managing memory, automatically. It finds the unused objects (that are no longer used by the program) and delete or remove them to free up the memory.","CS::PLChapter08, CS::programming-languages"
pI#hE3F#zD, What are pointers with a value other than null that point to storage that is no longer allocated?,dangling references,"CS::PLChapter08, CS::programming-languages"
Dts.xO8}E2, What do modern languages tend to prefer over coercions?,casts,"CS::PLChapter08, CS::programming-languages"
"Hv&RTW,W(.",What are tombstones?,a mechanism to detect dangling pointers and mitigate the problems they can cause in computer programs,"CS::PLChapter08, CS::programming-languages"
"lre+@{,6T1", Why do locks and keys cost more than tombstones?,because it is necessary to associate an additional word with each pointer,"CS::PLChapter08, CS::programming-languages"
CxpDF}yx^?,What are shadowed variables?,"When two variables are declared with the same name in a sub- and super-class the sub-class shadows the superclass, meaning that you access the sub-class rather than the super-class.","CS::PLChapter10, CS::programming-languages"
qE:A`[GVB},What is overriding?,"Overriding is a concept in object-orientation, where you redefine, or override, a method or variable implementation from a super class.","CS::PLChapter10, CS::programming-languages"
D@uTwE]/hF,How is overriding different from shadowing?,"Overriding is different from shadowing, in that instead of just pushing the old definition back, you redefine the current definition.","CS::PLChapter10, CS::programming-languages"
u:JANNlw$N,What is overloading?,"With overloading you have two or more of the same types, but with different arguments. Depending on the argument, you choose which method to use.","CS::PLChapter10, CS::programming-languages"
Piz;R(UiK{,What is the difference between overloading and overriding?,"With overloading you need to have at least two definitions, while with overriding you need just one. It is also important in overriding that you have the same number of arguments.","CS::PLChapter10, CS::programming-languages"
B|[}.b@]IK,What is runtime polymorphism also known as?,Overriding ,"CS::PLChapter10, CS::programming-languages"
bs~[{f/uL0,What is compile-time polymorphism also known as?,Overloading,"CS::PLChapter10, CS::programming-languages"
DzrR2A@wPq,What does it mean that a method is virtual?,When a method is virtual is allows for overriding. A virtual function is also inheritable.,"CS::PLChapter10, CS::programming-languages"
r;843pmvZL,Does Java allow for virtual methods?,By default all non-static functions in Java are virtual.,"CS::PLChapter10, CS::programming-languages"
m0tXT*j^&-,What is the difference between shadowing and overriding?,Shadowing redefines an entire method or function. Overriding redefines only the implementation of a method or function.,"CS::PLChapter10, CS::programming-languages"
E>@L~UtG!0,When is a function monomorphic?,When it works only for one type,"CS::PLMisc, CS::programming-languages"
EC{sKuSHAu,The physical machine manipulates data of which type?,Bit strings,"CS::PLChapter09, CS::programming-languages"
b<I//si<e1,What is an abstract data type?,Abstract Data type (ADT) is a type (or class) for objects whose behaviour is defined by a set of value and a set of operations.,"CS::PLChapter09, CS::programming-languages"
"y76],m-C{]",What is encapsulation in OOP?,"In object-oriented programming, encapsulation refers to the bundling of data with the methods that operate on that data, or the restricting of direct access to some of an object's components","CS::PLChapter09, CS::programming-languages"
O]#5pk<tg1,What are constructors?,"Operations which construct a new value of type T, possibly by using values of other known types.","CS::PLChapter09, CS::programming-languages"
yfW(`.O/l7,What are transformers or operators?,"Operations that compute the values of type T, possibly using other values. ","CS::PLChapter09, CS::programming-languages"
fjg+EH*IBO,What are observers?,"Operations that compute a value of a known type that is different from T, using one or more values of type T.","CS::PLChapter09, CS::programming-languages"
B[#UHmNL1o,What is possible if a type enjoys representation independence?,To replace its implementation by an equivalent one without causing any errors in clients. ,"CS::PLChapter09, CS::programming-languages"
EN3dOR}o+?, What is the separation between interface and implementation?,information hiding,"CS::PLChapter09, CS::programming-languages"
o%U/_Y(zO|,What is ADT short for?,Abstract Data Type,"CS::PLChapter09, CS::programming-languages"
AEvxBJakV{,An ADT without what is completely useless?,constructors,"CS::PLChapter09, CS::programming-languages"
CaO)gDA#Xy,In what language does object-orientation have its roots?,Simula (during the 60s) and Smalltalk (in the 70s),"CS::PLChapter10, CS::programming-languages"
tD8eUX5e?o,“the internal representation of an object is generally hidden from view outside of the object's definition” describes what in OOP?,Information hiding,"CS::PLChapter09, CS::programming-languages"
J0ZY{FA@5S,Following is a description of what? “A capsule containing both data and the operations that manipulate it and which provides an interface for the outside world through which the ______ is accessible.”,An object,CS::programming-languages
oleqD<}Xl-,What are operations in an object called?,"Methods (or functional fields, or member functions)",CS::programming-languages
c/zKpWvDq0,What are data items held in an object called?,Instance variables (or data members or fields),CS::programming-languages
t/K/khIa|e,What is a class?,A model for a set of objects,CS::programming-languages
Qf.r)y3zr9,What is a class in simula?,A procedure which returns a pointer to an activation record containing local variables and function definitions,CS::programming-languages
Q(YG9Nk!|w,What are object-oriented languages that lack lcasses based on?,Delegation (or prototypes),CS::programming-languages
b>FN|2-x8S,"In every class there are at least two views, which?","Private and public. With a private view, everything is visible, with a public with only the public parts are visible.",CS::programming-languages
"p^UZWt,xfX",Why do abstraction mechanisms play a crucial role in computing?,Because they allow us to manage the complexity inherent in most computational systems by isolating the improtant aspects in a specific context.,"CS::PLChapter01, CS::programming-languages"
Me7MMaUWm),What is the definition of an abstract machine?,"Assume that we are given a programming language, \(\mathscr{L}\). An abstract machine for  \(\mathscr{L}\), detoned by \(\mathscr{M}_\mathscr{L}\), is any set of data structures and algorithms which can perform the storage and execution of programs written in \(\mathscr{L}\)","CS::PLChapter01, CS::programming-languages"
L{u=grUf2l,What does the store in an abstract machine serve to store?,Data and programs,"CS::PLChapter01, CS::programming-languages"
bsP1N:!:uL,What does the interpreter in an abstract machine do?,It is the component that executes the instructions contained in programs.,"CS::PLChapter01, CS::programming-languages"
mgI*y`pR)9,What is the definition of a machine language?,"Given an abstract machine \(\mathscr{M}_\mathscr{L}\), the language \(\mathscr{L}\) “understood” by \(\mathscr{M}_\mathscr{L}\)’s interpreter is called the <i>machine language</i> of \(\mathscr{M}_\mathscr{L}\)","CS::PLChapter01, CS::programming-languages"
kR4VxQy/{+,Why are programs written in the machine language of \(\mathscr{M}_\mathscr{L}\) stored in the abstract machine’s storage structures?,"So that they cannot be confused with other primitive data on which the interpreter operates (from the interpreters viewpoints, programs are also a kind of data)","CS::PLChapter01, CS::programming-languages"
"B%a`h,!Mg4",What are low-level languages?,"Languages whose abstract machines are very close to, or coincide with, the physical machine.","CS::PLChapter01, CS::programming-languages"
hmrqZm}5i~,Often when we speak generically about “machine language” what do we mean?,We mean the language (a low-level one) of a physical machine. ,"CS::PLChapter01, CS::programming-languages"
t6E8o*d4?,What is a physical machines assembly language?,"A symbolic version of the physical machine (that is, which uses symbols such as ADD, MUL etc., instead of their associatyed hardware binary codes)","CS::PLChapter01, CS::programming-languages"
QkJC$99$-m,How are programs written in assembly code translated to machine code?,Using an assembler,"CS::PLChapter01, CS::programming-languages"
tr0KLU!=4L,What are high-level languages?,Those which support the use of constructs that use appropriate abstraction mechanisms to ensure that they are independent of the physical characteristics of the computer.,"CS::PLChapter01, CS::programming-languages"
r1UIo{84!i,Why are algorithms usually written in high-level language rather than low-level ones?,"The low-level algorithms take too many of the physical machines quirks into account, meaning that it is much easier to understand with a high-level language. ","CS::PLChapter01, CS::programming-languages"
M-tBmUx8_+,Are abstract machines always physical machines?,"No, abstract machines can be anything from physical machine to the World Wide Web.","CS::PLChapter01, CS::programming-languages"
Nbbv1FD`zh,"In a physical machine, the language \(\mathscr{L}H\) which the physical machine executes is composed of what?",Relatively simple instructions,"CS::PLChapter01, CS::programming-languages"
"Q.,q;TM$hu","In a physical machine, what is the difference between <pre> ADD R5, R0 </pre> and <pre> ADD (R5), (R0) </pre>?","Without the paranthesis it indicates the contents will be summed and the result stored in R5, while with paranthesis the contents of the memory cells whose addresses are contained in R0 and R5 is computed and the result stored in the cell whose address is in R5.","CS::PLChapter01, CS::programming-languages"
EjmKSkb=Uq,What is CISC short for?,"Complex Insturction Set Computer, processors which have many machine instructions","CS::PLChapter01, CS::programming-languages"
"l$.,Re:%7J",What is RISC short for?,"Reduced Instruction Set Computers, architectures in which there tend to be fewer instructions which are, in particular, simple enough to be executed in a few (possibly one) clock cycles and in pipelined fashion.","CS::PLChapter01, CS::programming-languages"
mDxC~sv12z,Where are the operations for processing primitive data and the usual arithmetic and logical operations implemented?,In the ALU (Arithmetic and Logic Unit),"CS::PLChapter01, CS::programming-languages"
OTJGR4$*Hv,What does the Program Counter register store?,The address of the next instruction to execute.,"CS::PLChapter01, CS::programming-languages"
QP%0W|#sjb,How is the interpreter for the hardware (physical) machine implemented?,As a set of physical devices which comprise the Control Unit and which support execution of the so-called fetch-decode-execute cycle.,"CS::PLChapter01, CS::programming-languages"
E8Mjm#[(78,"At a physical level, what is the difference between data and instructions?","There are none, they are both simply bits. However, conceptually they are different.","CS::PLChapter01, CS::programming-languages"
NYWnfeql7u,How is it possible to implement \(\mathscr{M}_\mathscr{L}\) in hardware?,"Using physical devices such as memory, arithmetic and logic circuits, buses etc., to implement a physical machine whose machine language coincides with \(\mathscr{L}\). To do this, it is sufficient to implement in the hardware the data structures and algorithms constituting the abstract machine.","CS::PLChapter01, CS::programming-languages"
yC7xpsVO*^,What advantage does the implementation of machine \(\mathscr{M}_\mathscr{L}\)  in hardware have?,That the execution of programs in \(\mathscr{L}\) will be fast because they will be directly executed by hardware.,"CS::PLChapter01, CS::programming-languages"
J<X~rI`;Eb,"When implementing \(\mathscr{M}_\mathscr{L}\) in hardware, what kind of langauges are used?","Low-level languages, because their constructs are very close to the operations that can be naturally defined using just physical devices.","CS::PLChapter01, CS::programming-languages"
NsZ`bMq$Ni,What are the three ways to implement an abstract machine \(\mathscr{M}_\mathscr{L}\)?,Implementation in <i>hardware</i><br/>Simulation using <i>software</i><br/>Simulation (emulation) using <i>firmware</i><br/>,"CS::PLChapter01, CS::programming-languages"
J!|+%7iple,What is a partial function?,A function that is a correspondence between the two sets A and B but can be undefined for some elements of A.,"CS::PLChapter01, CS::programming-languages"
qwGMyPumZ,What are the pros and cons of implementing \(\mathscr{M}_\mathscr{L}\) in hardware?,It provides the greatest speed but no flexibility.,"CS::PLChapter01, CS::programming-languages"
NZV(=*4^-x,What are the pros and cons of implementing \(\mathscr{M}_\mathscr{L}\) in software?,It affords the highest flexibility and least speed,"CS::PLChapter01, CS::programming-languages"
y|_Db`YJdM,What are the pros and cons of implementing \(\mathscr{M}_\mathscr{L}\) in firmware?,"It acts as an intermediate between implmentation in software and hardware. Therefore neither the greatest speed, nor the greatest flexibility, but neither the slowest speed nor the worst flexibility.","CS::PLChapter01, CS::programming-languages"
cUf+v&ecnc,What does \(\mathscr{P}^\mathscr{L} : \mathscr{D} \to \mathscr{D}\) indicate?,"A program written in \(\mathscr{L}\). (this can be seen as a partial function, where \(\mathscr{D}\) indicates both input and output data.","CS::PLChapter01, CS::programming-languages"
iodcjJ0Li,What is \(\mathscr{I}^{\mathscr{L}o}_\mathscr{L}\)?,An interpreter implemented in \(\mathscr{L}o\) which interprets all of \(\mathscr{L}\)’s instructions.,"CS::PLChapter01, CS::programming-languages"
Ar>)1K5toI,What is an interpreter for language \(\mathscr{L}\)?,"An interpreter for \(\mathscr{L}\) written in language \(\mathscr{L}o\), is a program which implements a partial function: <br/> \(\mathscr{I}^{\mathscr{L}o}_\mathscr{L}:(\mathscr{P}rog \times \mathscr{D}) \to \mathscr{D}\) such that \(\mathscr{I}^{\mathscr{L}o}_\mathscr{L}:(\mathscr{P}^\mathscr{L}, Input) = \mathscr{P}^\mathscr{L} (input)\)  ","CS::PLChapter01, CS::programming-languages"
b5ym^R`%ar,"What is \(\mathscr{C}_{\mathscr{L},\mathscr{L}o}\)?",A compiler where \(\mathscr{L}\) is the soruce language and \(\mathscr{L}o\) is the object language.,"CS::PLChapter01, CS::programming-languages"
AMSBZ#RI}B,What is the main disadvantage of the interpreted implementation?,It’s low efficiency,"CS::PLChapter01, CS::programming-languages"
lH5OvJ(MI`,What is the main advantage of the interpreted implementation?,"It’s flexbility. Moreover, the development of an interpreter is easier than the development of a compiler.","CS::PLChapter01, CS::programming-languages"
N!E9sE9FHZ,Describe the functioning of the interpreter for a generic abstract machine.,The interpreter in a generic abstract machine executes the instructions contained in programs.,"CS::PLEPChapter01, CS::programming-languages"
i0t@P{4O.H,"Describe the differences between the interpretative and compiled implementations of a programming language, emphasising the advantages and disadvantages.","The compiled approach is faster, while less flexible. The interpreted approach is more flexiblle, while slower. The compiled approach translates a program at compile-time to machine language, while an intepreter translates it in runtime. This means that concepts like for loops will be much slower in interpreters, since they have to interpret the entire loop, while a compiler might have a quicker way.","CS::PLEPChapter01, CS::programming-languages"
w3xXhORl&y,"Assume you have available an already-implemented abstract machine, C, how could you use it to implement an abstract machine for another language, L?",You can use the abstract machine and it’s language \(\mathscr{M}c_{\mathscr{L}c}\) to implement \(\mathscr{M}L_{\mathscr{L}L}\),"CS::PLEPChapter01, CS::programming-languages"
y]4fcn*Q<f,Which three areas did Morris identify at which a description of a language can occur?,"<i>grammar, semantics</i> and <i>pragmatics</i>.","CS::PLChapter02, CS::programming-languages"
Dh=qoOFD)9,Grammar is the part of the description of the language which answers what question?,Which phrases are correct,"CS::PLChapter02, CS::programming-languages"
"d)p;nyD^,U",What does syntax describe?,Which sequences of words constitute legal phrases,"CS::PLChapter02, CS::programming-languages"
M7:ZE-)1AQ,Semantics is the part of the description of the language which seeks to answer which question?,What does a correct phrase mean,"CS::PLChapter02, CS::programming-languages"
cHA<^t<#M=,Pragmatics is the part of a language description which asks itself what?,How do we use a meaningful sentence,"CS::PLChapter02, CS::programming-languages"
lJdcWSRE<,"The three classical levels of language description are <i> grammar, semantics </i> and <i> pragmatics</i>, what is a fourth one we can add in the case of programming languages?",Implementation,"CS::PLChapter02, CS::programming-languages"
n:e@m^*8)e,When is a grammar ambiguous?,If there exists at least one string of \( \mathscr{L}(G)\) which admits more than one derivation tree,"CS::PLChapter02, CS::programming-languages"
OPB+wf!E6W,When does a string of characters admit a derivation tree?,If it is the result of a left-to-right traversal of the derivation tree.,"CS::PLChapter02, CS::programming-languages"
"lG=,N_R2b&",Is object language the same as machine code?,"Not necessarily, it is merely a language twoards which the translation is directed.","CS::PLChapter02, CS::programming-languages"
e./|p%:Gg~,How many tokens will the lexical analyser of C or Java produce with the following string? \(x = 1 + foo++;\),"7: the identifier x, the assignment operator =, the number 1, the addition operator +, the identifier foo, the auto increment operator ++ and finally the command termination token ;","CS::PLChapter02, CS::programming-languages"
OONK$V^P/;,Does the lexical analyser check for any kind of errors?,"No, it simply scans the input text from left to right, taking a single pass to recognise tokens.","CS::PLChapter02, CS::programming-languages"
x;/9P@w}zl,What is another name for the syntactic analyser?,The parser,"CS::PLChapter02, CS::programming-languages"
gFI90cT$N_,What is the goal of the syntactic analyser?,To construct a derivation tree for the list of tokens produced by the lexical analyser,"CS::PLChapter02, CS::programming-languages"
fDJ2I4G`u*,Which two main families do formal methods for semantics divide into?,Denotational and operational (*algebraic and axiomatic),"CS::PLChapter02, CS::programming-languages"
L`mp)w(b}4,Is the name and the object it denotes the same thing?,"No, a name is just a character string, while its denotation can be a complex object such as a variable, a function, a type, and so on.","CS::PLChapter04, CS::programming-languages"
bE:+n(9IWd,Can an object have more than one name?,"Yes, this is called aliasing","CS::PLChapter04, CS::programming-languages"
C0wXY?*K^),What is a procedure?,"A name associated with a set of commands, together with certain visibility rules which make available to the programmer its sole interface. (e.g. Functions, methods and subprograms)","CS::PLChapter04, CS::programming-languages"
sJCXs3/O@<,What are objects to which a name can be given called?,Denotable objects,"CS::PLChapter04, CS::programming-languages"
"u,]n(+|C.X",What is the definition of an environment?,"The set of associations between names and denotable objects which exist at runtime at a specific point in the program and at a specific time during execution, is called the <i> (referencing) environment </i>","CS::PLChapter04, CS::programming-languages"
OKPy}-GF9N,What is a declaration?,A construct that allows the introduction of an association in the environment.,"CS::PLChapter04, CS::programming-languages"
hLb!TX&>4S,What is it called when a single object is visible using different names in the same environment?,Aliasing,"CS::PLChapter04, CS::programming-languages"
H19HuM;^~/,What is a block?,"A textual region of the program, identified by a start sign and an end sign, which can contain declarations local to that region (that is, which appear within the region).","CS::PLChapter04, CS::programming-languages"
lyf%^HN}Dl,What is a <b>block associated with a procedure</b>?,"A block associated with declarations local to a procedure. It corresponds textually to the body of the procedure itself, extended with the declarations of formal parameters.","CS::PLChapter04, CS::programming-languages"
u@!;v#2K]x,What is an <b>in-line block</b>?,A lbock which does not correspond to a declaration of procedure and which can appear (in general) in any position where a command can appear,"CS::PLChapter04, CS::programming-languages"
A-MZFA;i<Z,"A declaration local to a block is visible in that block and in all blocks listed within it, unless there is a new declaration of the same name in that same block. What then happens?",The block which contains the redefinition of the new declaration hides the previous one.,"CS::PLChapter04, CS::programming-languages"
w00Cw+ri&&,What are the three components  the environment associated with a block is formed of?,"Local Environment, non-local environment and global environment.","CS::PLChapter04, CS::programming-languages"
Bvv.>0D2iX,What is the local environment?,"The environment composed of the set of associations for names declared locally to the block. In case of the block being a procedure, the local environment contains also the associations for the formal parameters, given that they can be seen, as far as the environment is concerned, as locally declared variables.","CS::PLChapter04, CS::programming-languages"
"qaF,KnXLEU",What is the non-local environment?,"This is the environment formed from the associations for names, which are visible from inside a block but which have not been declared locally.","CS::PLChapter04, CS::programming-languages"
j2Ta5wpS^0,What is the global environment?,This is the environment formed from associations created when the program’s execution began. It contains the associations for names which can be used in all blocks forming the program.,"CS::PLChapter04, CS::programming-languages"
DkwAMVXgU?,"Which head more efficient execution, dynamic or static scope?",Static scope,"CS::PLChapter04, CS::programming-languages"
Ejt<>qFmAq,What is the definition of dynamic scope?,"According to the rule of dynamic scope, the valid association for a name X, at any point P of a program, is the most recent (in the temporal sense) association creatyed for X which is still active when control flow arrives at P.","CS::PLChapter04, CS::programming-languages"
gzY$+Dm;>k,What is the dynamic scope rule also called?,The rule of the most recent association,"CS::PLChapter04, CS::programming-languages"
lml+KC@9|m,"Using the dynamic scope, what is the value of x when write is called? <br/> <pre> {const x = 0;
void fie(){
write(x);
}
void foo(){
const x = 1;
{const x = 2;
}
foo();
}
foo();
}</pre>","1. Even if 2 is the most recent one created, it is no longer active when procedure fie is exeuted and is therefore not considered.","CS::PLChapter04, CS::programming-languages"
"m,/t-:4k~+","Using static scope, what is printed? <br/> <pre> {int x = 0;
void fie(int n){
x = n+1;
}
fie(3);
write(x);
{int x = 0;
fie(3);
write(x);
}
write(x);
}</pre>",4 0 4,"CS::PLChapter04, CS::programming-languages"
yMd8P#!A^:,What part of an abstract machine deals with memory management?,The interpreter.,"CS::PLChapter05, CS::programming-languages"
eF03V1)_Gz,Are global variables dynamic or static memory?,"Static memory, they can be stored in a memory area that is fixed before execution begins because they are visible throughout the program","CS::PLChapter05, CS::programming-languages"
Jf$nzX7eRa,Which scheme is used when blocks are enteredd and left?,"LIFO. This makes sense, as when block A is enttered, and then block B is entered, we first need to leave block B before blcok A.","CS::PLChapter05, CS::programming-languages"
b/qlhc8hh!,"If the average number of simultaneously active calls to the same procedure is less than the number of procedures declared in the program, will you want to use dynamic or static memory?","Dynamic, as using a stack will save space, for there will be no need to allocate a memory area for each declared procedure, as must be done in the case of entirely static management.","CS::PLChapter05, CS::programming-languages"
ee@2RgHQGP,What are intermediate results in activation records for in-line blocks?,"Intermediate results that will not have an explicit name when doing calculations, e.g. (a+x) / (x+y) will have (a+x) and (x+y) as two different intermediate results. On many architectures they can be stored in registers","CS::PLChapter05, CS::programming-languages"
p0#qfQQVuA,What are local variables in activation records for in-line blocks?,Variables declared inside blocks. These must be stored in a memory space whose size will depend on the number and type of the variables.,"CS::PLChapter05, CS::programming-languages"
eQCm2kYM14,What is the dynamic chain pointer in in-line blocks?,The field that stores a pointer to the previous activation record on the stack (or to the last activation record created).,"CS::PLChapter05, CS::programming-languages"
oUl/dqS@V`,What is the purpose of the static chain pointer in an activation record for procedures?,It stores the information needed to implement the static scope rules.,"CS::PLChapter05, CS::programming-languages"
d_K5aQ7{f8,What is the purpose of the return address in an activation record for procedures?,This contains the address of the first instruction to execute after the call to the current procedure/function has terminated execution.,"CS::PLChapter05, CS::programming-languages"
u5T4CXPUY;,What is the purpose of the returned result in an activation record for procedures?,This is present only in fuctions. Contains the address of the memory location where the subprogram stores the value to be returned by the function when it terminates. This memory location is inside the caller’s activation record.,"CS::PLChapter05, CS::programming-languages"
k;6_$YG;o8,What is the purpose of parameters in an activation record for procedures?,The values of actual parameters used to call the procedure or function are stored here.,"CS::PLChapter05, CS::programming-languages"
P7#a:!y(l6,When is an activation record pushed to the stack?,When a block is entered or a procedure is called. It is later removed from the sttack when the block is exited or when the procedure terminates.,"CS::PLChapter05, CS::programming-languages"
G3BxQ4r%nK,What are the purposes of the code pieces <i>calling sequence</i> for the caller and <i> prologue </i> and <i>epilogue</i> for the callee? ,"The calling sequence is a piece of code inserted into the caller of a function/procedure to be executed immediately before the procedure call. This piece of code is used for stack management. <br/> The prologue is executed immediately after the call, and the epilogue is executed when the procedure ends execution. They manage the different operations needed to handle activation records and correctly implement a procedure call.","CS::PLChapter05, CS::programming-languages"
clld0;CdM*,"Languages which include explicit commands for memory allocation such as C and Pascal don’t use a stack, but instead use what?",A heap. This is simply an array of memory in which blocks of memory can be allocated and deallocate relatively freely.,"CS::PLChapter05, CS::programming-languages"
z#WoHtM$U<,"In the case in which a language does not allow runtime allocation of variable-length memory spaces, what kind of blocks do we use?",Fixed-length blocks.,"CS::PLChapter05, CS::programming-languages"
"p]c^|!>vG,","When the heap is divided into fixed-length blocks, what structure is used for the blocks?",A listt structure called the free list.,"CS::PLChapter05, CS::programming-languages"
e_lYs;T9@Z,When are variable-length blocks used in the heap?,"In the case in which the language allows the runtime allocation of variable-length memory spaces, fo rexample to store an array of variable dimension","CS::PLChapter05, CS::programming-languages"
wk=weC(/sa,When would it be insufficient to do memory management using just the stack?,"When a language includes explicit commands for memory allocation, as for example do C and Pascal.","CS::PLChapter05, CS::programming-languages"
ObGJ&WY}0/,"Using fixed-length blocks, when an operationg requires the allocation of a memory block from the heap (for example using the malloc command), what happens?","The first element of the free list is removed from the list, the pointer to this element is returned to the operations that requested the memory, and the pointer to the free list is updated so that it points to the next element.","CS::PLChapter05, CS::programming-languages"
F~2QtZM`U],"Using fixed-length blocks, what happens when memory is freed or deallocated?",The freed block is linked again to the head of the free list. ,"CS::PLChapter05, CS::programming-languages"
O6K[dyiRC+,When does internal fragmentation occur?,When a block of size strictly larger than the requested by the program is allocated.,"CS::PLChapter05, CS::programming-languages"
Goiud)?YF0,When does external fragmentation occur?,"When the free list is composed of blocks of a relatively small size and for which, evn if the sum of the total available free memory is enough, the free memory cannot be effectively used. <img src=”external-fragmentation.png />","CS::PLChapter05, CS::programming-languages"
M9^v18P4^8,What are the two memory allocation techniques used to avoid external fragmentation?,Single free list and multiple free lists,"CS::PLChapter05, CS::programming-languages"
Mv`MS1tvom,How is sequence control implemented in low-level languages?,By updating the value of the PC (Program Counter) register.,"CS::PLChapter06, CS::programming-languages"
CjbSvW79f@,What is the definition of expressions?,"An expression is a syntactic entity whose evaluation either produces a value or fails to terminate, in which case the expression is undefined.","CS::PLChapter06, CS::programming-languages"
QZm[wz.sCK,What is LISP an acronym of?,LISt Processor,"CS::PLChapter06, CS::programming-languages"
Qd*.rV?!w(,What programming language represents functions using a particular notation known as <i>Cambridge Polish</i>?,Lisp (1958),"CS::PLChapter06, CS::programming-languages"
"uk#,HeJMR`",What is a problem with the infix notation?,The infix notation makes it harder to realize the precedence of the expressions,"CS::PLChapter06, CS::programming-languages"
PlpDZ<cr#x,What evaluation strategy is used with Prefix Notation?,Simply walking the expression from left to right using a stack to hold its components.,"CS::PLChapter06, CS::programming-languages"
vNgL)8F*va,Which notation is easiest to evaluate?,"Postfix Notation is easiest. Then prefix, then infix.","CS::PLChapter06, CS::programming-languages"
Qq#w{Zm0R(,"In which languages do all operators have the same precedence, meaning you have to use parentheses?",APL and Smallttalk,"CS::PLChapter06, CS::programming-languages"
BaE{2d-sc8,What is the definition of commands?,A command is a syntactic entity whose evaluation does not necessarily return a value but can have a side effect.,"CS::PLChapter06, CS::programming-languages"
Br~s}@rAx+,In what type of programming languages are commands mostly used?,Imperative programming languages.,"CS::PLChapter06, CS::programming-languages"
x?[cq6R38J,"The result of the evaluation of an expression is a value, what is the result of evaluating a command?",A new state which differs from the start state precisely in the modifications caused by the side-effects of the command itself,"CS::PLChapter06, CS::programming-languages"
OfWA{q7pGT,What is specific about variables in imperative languages?,They are modifiable. They act as containers of references. ,"CS::PLChapter06, CS::programming-languages"
HVWSc=KT54,Why is it often said that functional languages do not have variables?,"In their pure forms, they do not have any modifiable variables.","CS::PLChapter06, CS::programming-languages"
lLPSVwn=0Z,What is the difference between the reference model for variables and the modifiable-variable model?,"In the reference model each variable points to a reference, while the modifiable-variable model each model contains an element.","CS::PLChapter06, CS::programming-languages"
"jw,.Ax3w:V",What type of command is <pre>;</pre>?,A sequential command.,"CS::PLChapter06, CS::programming-languages"
JoaS[@Sv^=,What are composite commands?,"Delimiters used to group a sqeuence of commands, e.g. in C <pre> { 
…
}</pre> This is also called a block.","CS::PLChapter06, CS::programming-languages"
OWqd9dg[^,What are commands for explicit sequence control?,"These are the sequential commands and <i>goto</i>. Let us consider, in addition, the composite command, which allows us to consider a group of commands as a single one, as being in this category.","CS::PLChapter06, CS::programming-languages"
ePQMqX&J!0,What are conditional (or selection) commands?,These are the commands which allow the specification of alternative patths that the competition can take. They depend on the satisfaction of specific conditions.,"CS::PLChapter06, CS::programming-languages"
w|>s;-1S84,What are iterative commands?,"These allow the repetition of a given command for a predefined number of times, or until the satisfactionof specific conditions.","CS::PLChapter06, CS::programming-languages"
E$5ZMcm$7S,What are the two groups we can divide conditional commands into?,<pre>If</pre> and <pre>Case</pre>,"CS::PLChapter06, CS::programming-languages"
J*D7f`A@_C,When was the if command originally introduced?,Algol60,"CS::PLChapter06, CS::programming-languages"
fifo>{oAv(,How is <pre>case</pre> implemented in assembly?,"Using a vector of contiguous cells called a <i>jump table</i>, in which each element of the table contains the address of the first sintruction of the corespond command in the case’s branches.","CS::PLChapter06, CS::programming-languages"
M$T{WsXpJ^,Why use case over a series of nested ifs?,It is more efficient,"CS::PLChapter06, CS::programming-languages"
rEKXgJ&6@y,What are the two basic mechanisms employed to achieve the same effect as goto?,Structured iteration and recursion.,"CS::PLChapter06, CS::programming-languages"
"wvJ_M4Q@o,",What is the most common form of unbounded iteration?,The <i>while</i> command,"CS::PLChapter06, CS::programming-languages"
43)J<g/q],What is special about Pascals while loop?,"It runs before it checks the condition, meaning it will always run once.","CS::PLChapter06, CS::programming-languages"
jgCqS#DqA`,What is bounded iteration also called?,Numerically controlled iteration,"CS::PLChapter06, CS::programming-languages"
B0eiYa:mWF,What is the most common example of a command for bounded iteration?,The <pre>for</pre> command,"CS::PLChapter06, CS::programming-languages"
M6}C$5pQ@R,What kind of <pre>for</pre> commands cannot be translated into a <pre>while</pre>?,"None, every for command can easily be translated into a while. ","CS::PLChapter06, CS::programming-languages"
hNMr-^Iyyu,Why would you use a for loop rather than a while loop?,"for is more compact, it makes understanding what the loop does a lot easier, it can also prevent some common errors. It <i>can</i> also be optimsed better.","CS::PLChapter06, CS::programming-languages"
CMoN|K|-F:,What is the essential idea behind srtuctured control constructs?,"By having a single entry and a single exit point, they allow structuring of the code in which the linear scanning of the program text corresponds to execution flow.","CS::PLChapter06, CS::programming-languages"
zD%Uo1bJ8T,What is mutual recursion?,"When a procedure P calls another procedure Q, which in itst turn, calls P.","CS::PLChapter06, CS::programming-languages"
dTTBk0=Iy0,Why does the presence of recursion in a programming language make it necessary to include dynamic memory management?,"Since it is not possible sttatically to determine the maximum number of instances of a single function that will be active at the same time (and, therefore, to determine the maximum number of activation records required).","CS::PLChapter06, CS::programming-languages"
K60so<?zzM,What automatic technique can be used to transofrm a function into an equivalent one with tail recursion?,Conntinuation passing style.,"CS::PLChapter06, CS::programming-languages"
n`3=7WDpNJ,Is recursion faster than iteration?,"Not necessarily, but with tail recursion it can attain speeds similar to that of iterative.","CS::PLChapter06, CS::programming-languages"
IpBms[*:cH,What is the parameter passing discipline?,"The way in which actual parameters are paired with formal parameters, and the semantics which results from this.","CS::PLChapter07, CS::programming-languages"
imZk>E0/81,"In call by value, what is the link between the formal and the actual parameter? ",There is none,"CS::PLChapter07, CS::programming-languages"
IXX9|#SX&?,What is another name for call by reference?,Call by variable,"CS::PLChapter07, CS::programming-languages"
PezVUKFan1,Is call by reference unidirectional or bidirectional?,Bidirectional,"CS::PLChapter07, CS::programming-languages"
b6^p6YR:*d,What is the opposite of call by value?,"Call by result, rather than copying the value going into the function, it copies the value going out.","CS::PLChapter07, CS::programming-languages"
BvM3Lpi;dx,Why would you use call by result?,If you have parallel things going around while the call by result function is running. ,"CS::PLChapter07, CS::programming-languages"
I7Ins)[^Ge,What is the difference between call by name and call by value?,"Call by name reduces only when the variables are needed, call by value reduces immediately. i.e. f(a, b, c) a = (2+2), b = (4+4), c = (1+1), if a and b are not used, and only c, call by name would only reduce c. Call by name also reduces or computes whenever needed.","CS::PLChapter07, CS::programming-languages"
FXgIN0#aCD,What is structured programming?,"Structured programming is a programming paradigm aimed at improving the clarity, quality, and development time of a computer program by making extensive use of the structured control flow constructs of selection and repetition, block structures, and subroutines","CS::PLChapter06, CS::programming-languages"
g0VkDqkA}c,What is the <i>copy rule?</i>,"<i>Let f be a function with a single formal parameter, x, and let a be an axpression of a type which is compatible witht that of x. A call to f witht an actual parameter a is semantically equivalent to the execution of the body of f in which all occurrences of the formal parameter, x, have been replaced by a.</i> i.e. when a parameter is needed in the program, the actual parameter is put in e.g. 5-7, rather than (-2).","CS::PLChapter07, CS::programming-languages"
vK[3.17mka,"When using dynamic scope, do you use shallow or deep binding?","You don’t need to use a specific one, you can use both.","CS::PLChapter07, CS::programming-languages"
l}e~V(-Rtd,"When using static scope, do you use shallow or deep binding? ",Deep binding,"CS::PLChapter07, CS::programming-languages"
xeMo%V-0!_,What is the simplest and intuitive way in which an abstract machienc an implement exceptions?,"Using a stack of activation records. When a block is entered at runtime, a pointer to the corresponding handler (together with the type of exception to which it refers) is inserted into the activation record (of the current procedure or of the current anonymous block). When a normal exit is made from a protected block (that is, because control transfers from it in the usual way and not through raising an exception), the reference to the handler is removed from the stack. Finally when an exception is raise, the abstract machine look sfor a handler for this exeption in the current activation record. If one is not found, it uses the information in the record to reset the state of the machine, removes the record from the stack and rethrows the exception.","CS::PLChapter07, CS::programming-languages"
dxFI(E-*/.,What is a data type?,"A data type is a homogeneous collection of values, effectively presented, equipped with a set of operations which manipulate these values.","CS::PLChapter08, CS::programming-languages"
mSu1gf]+i$,Why are real number not effectively presentable?,"Because there are real numbers with inifnite decimal expansion, which cannot be obtained by means of any algorithm.","CS::PLChapter08, CS::programming-languages"
JKGenrEgO3,What do most languages require of the type of <i>exp</i> in the following code segment? <pre>x := exp</pre>,"That the type of exp coincides (or better, is compatible) with the (declared) type of x.","CS::PLChapter08, CS::programming-languages"
n38%#+<=hG,What does tail recursion fix over normal recursion?,The problem of the normal recursion using too much memory (as well as some efficiency),"CS::PLMisc, CS::programming-languages"
lg#1wiGd$w,"What does this describe? <br> A type system is this when no program, during its execution, can generate an usignalled error derived from a type violation.","Type safe, meaning no program can violate the distinctions between types defined in that language.","CS::PLChapter08, CS::programming-languages"
QkzpoZ@>06,"Which of the following are a function in imperative languages? Storable, expressable, denotable.","For imperative languages it is only denotable. However, for functional languages functional values can both be denotable and expressible, and in some languages even storable. ","CS::PLChapter08, CS::programming-languages"
sLnispm[LX,"A problem with static type checking is that static types can decree as erroneous, programs that, in reality do not cause a runtime type error, why is this?","A condition that will never be met might assign a type to something that it can not hold, for example <pre>
int x; 
if (0==1) x = “pippo”; 
else x = 3 + 4;</pre>
here the command x = “pippo” would never be executed, but the static type checker would likely still cause an error.","CS::PLChapter08, CS::programming-languages"
nD7^AGlBWz,What are the most common sets of character codes for <i>character</i> types?,ASCII and UNICODE. The representation in store will consist of a single byte with ASCII and two bytes with UNICODE.,"CS::PLChapter08, CS::programming-languages"
I66C!n<:BX,Why do we have no interest in explicitly saying what void returns?,"It will return something unique each time, that is of no use. ","CS::PLChapter08, CS::programming-languages"
v~osfRLC3A,What is the purpose of <pre>void</pre>?,It is used to denote the type of operations that modify the state but return no value.,"CS::PLChapter08, CS::programming-languages"
ldPm/C]<uU,What was the first language to introduce intervals as well as enumerations?,Pascal,"CS::PLChapter08, CS::programming-languages"
u-%Y)--_iL,Are records (or structures) homogenous or heterogeneous?,Heterogeneous,"CS::PLChapter08, CS::programming-languages"
p.)NouNB6<,Can records be nested?,"In many languages, yes.","CS::PLChapter08, CS::programming-languages"
"mn$,=UnTK1",What is the difference between structs and unions in C?,Unions share the same memory location.,"CS::PLChapter08, CS::programming-languages"
P7LYwZ.!bF,What is the size of a union in c? ,It is equal to the type with the largest size.,"CS::PLChapter08, CS::programming-languages"
ITX&jyHmdH,Are arrays homogenous or heterogeneous?,Homogenous,"CS::PLChapter08, CS::programming-languages"
c]}BH.2%+G,What is the most simple operation permitted on an array?,Element selection,"CS::PLChapter08, CS::programming-languages"
wDzRNZ&YvV,Which programming langauges allow the definition of set types?,Pascal and its descendants,"CS::PLChapter08, CS::programming-languages"
O^b8H#-@3a,Some languages permit the direct manipulation of l-values. What is the corresponding type called?,A pointer type,"CS::PLChapter08, CS::programming-languages"
LG`O9ue5g&,Are poitners necessary in a language with refernce model for variables?,"No, every variable is always a reference.","CS::PLChapter08, CS::programming-languages"
JGozyo~lN.,What is explicit deallocation?,When the language makes available a mechanism with which the programmer can release the memory referred to by a pointer. ,"CS::PLChapter08, CS::programming-languages"
tv4.ZCc~|c,"If the definition of a type is opaque, do we have structural equivalence or equivalence by name?",Equivalence by name,"CS::PLChapter08, CS::programming-languages"
KG1)%Tg(H=,"If the definition of a type is transparent, do we have structural equivalence or equivalence by name?",Structural Equivalence,"CS::PLChapter08, CS::programming-languages"
e@*+3YbLdv,What is the definition of equivalence by name?,Two types are equivalent by name only if they have the same name (so a type is equivalent only to itself),"CS::PLChapter08, CS::programming-languages"
i?G/e*>#Z/,"Pascal adopts the rule of <i>weak</i> (or lax) equivalence by name, what does this mean?","The simple renaming of a type does not generate a new type, but only a type alias for the same one.","CS::PLChapter08, CS::programming-languages"
nuYF1ur~PS,"Using <i>weak</i> equivalence by name, which types are equivalent and which are distinct? <pre> 
type T1 = 1..10;
type T2 = 1..10;
type T3 = int; 
type T4 = int;
</pre>",T1 and T2 are distinct but T3 and T4 are equivalent. This is because T3 and T4 are seen as aliases for int.,"CS::PLChapter08, CS::programming-languages"
e53J5UCD7U,"Using <i>non-weak</i> equivalence by name, which types are equivalent and which are distinct?  <pre> 
type T1 = 1..10;
type T2 = 1..10;
type T3 = int; 
type T4 = int;
</pre>",They are all distinct.,"CS::PLChapter08, CS::programming-languages"
f`#ruW.rcS,What does it mean if a language uses opaque type definitions?,Each new definition introduces a new type which is different from every preceding one.,"CS::PLChapter08, CS::programming-languages"
C*1=:+)/P],"In a language with transparent declarations, when are two types equivalent?","if they have the same structure, that is if, substituting names for the relevant definitions, identical types are obtained.","CS::PLChapter08, CS::programming-languages"
N2C*rl&v=8,"Using structual equivalence, which types are equivalent here? <pre>
type T1 = int; 
type T2 = char; 
type T3 = struct {
                           T1 a; 
                           T2 b;
                    }
type T4 = struct {
                           int a; 
                           char b; 
                     }
                   </pre>",T3 and T4 are structurally equivalent.,"CS::PLChapter08, CS::programming-languages"
x@Wj37W81.,What is the definition of compatibility?,"We say that type T is compatible with type S, if a value of type T is permitted in any context in which a value of type S would be admissible.","CS::PLChapter08, CS::programming-languages"
n~wzB4z]g;,"In a language which admits structural equivalence, are two types that are structurally equivalent compatible?","Yes, but not equal.","CS::PLChapter08, CS::programming-languages"
v1|@H@5Nxa,What is implicit conversion (also called coercion or forced conversion)?,This is the case in which the abstract machine inserts a conversion when there is no such indication in the high-level language.,"CS::PLChapter08, CS::programming-languages"
s#T^bS$i9l,What is explicit conversion (or cast)?,This is when the conversion is indicated in the text of the program.,"CS::PLChapter08, CS::programming-languages"
A8;fOas@fV,What is the definition of type coercions?,"In the precense of compatibility between the types T and S, the language allows a value of tyep T to occur where a value of type S is expected. When this happens, the compiler and/or abstract machines inserts a type conversion between T and S.","CS::PLChapter08, CS::programming-languages"
FSIIxKRv:[,"What does this describe? <br/> These are annotations in the language, which specify that a value of one type must be converted to that of another type.",Explicit Conversions,"CS::PLChapter08, CS::programming-languages"
lj5W:^f::),What can universal polymorphism be divided into?,Parametric polymorphism and subtyping or inclusion polymorphism.,"CS::PLChapter08, CS::programming-languages"
DrG$z4UH3B,"If we have defined the name + to be two functions, one which accepts integers, and another which accepts floats, what type of polymorphism would that be?","Overloading, or ad hoc polymorphism. It chooses which function depending on the context.","CS::PLChapter08, CS::programming-languages"
mO]UO(D+JG,What type of polymorphism is <i>null</i>?,"Universal parametric polymorphism, it has an infinite number of different types.","CS::PLChapter08, CS::programming-languages"
k+9uRkvD2$,What type of polymorphism is <pre>void sort(<T> A[])</pre>?,"Universal parametric polymorphism, it has an infinite number of different types.","CS::PLChapter08, CS::programming-languages"
H`dprV@4s:,In what kind of polymorphism is explicit and implicit polymorphism present?,Universal parametric polymorphism.,"CS::PLChapter08, CS::programming-languages"
cICuGK~D)V,Where is subtype polymorphism typically present?,In object-oriented programming languages.,"CS::PLChapter08, CS::programming-languages"
er|}QGU9{T,"What is responsiblie for verifying that a program respects the rules (in particular, the compatibility rules) imposed by the type system?",A language’s type checker,"CS::PLChapter08, CS::programming-languages"
"wAzfNn,7K6",How does the type checker determine the type of complex expressions?,"<b>It performs a simple traversal of the program’s abstract syntax tree</b>. Starting at the leaves (which represent variables and constants whose types are known), it moves upwards through the tree towards the root, computing the type of the composite expressions on the basis of the information provided by the programmer and the information it obtains from the type system (for example, the type system could establish that + is an operator which, when applied to two expression of type int, permits an expression also of type int to be derived, while =, when applied to two arguments of scalar type, gives an expression of type bool).","CS::PLChapter08, CS::programming-languages"
M33_LM`PFk,"Why are C, C++ and all the languages of their family unsafe? ","Because they allow access to the value of a pointer, meaning that the type system is more or less just a methodological suggestion to the programmer, in the sense that they (C, C++) allow the programmer to bypass type checking.","CS::PLChapter08, CS::programming-languages"
BGS)a18_L*,What is a locally unsafe language?,"A language whose type system is well regulated and type checked, but which contain some, limited, constructs which, when used, allow insecure programs to be written.","CS::PLChapter08, CS::programming-languages"
AC|j}H>|9m,What was the first language to introduce type inference?,ML,"CS::PLChapter08, CS::programming-languages"
c%/]ZSe9Rh,When is a language safe?,When the execution of a typed program can never generate a hidden error induced by the violation of a type.,"CS::PLChapter08, CS::programming-languages"
jl%b)4wJC!,What can an abstract machine do when using a tombstone?,"An abstract machine can detect every attempt at dereferencing a dangling reference. Every time an object is allocated in the heap (to be then accessed by a pointer), the abstract machine also allocates an extra word in memory. (This word is called a tombstone)","CS::PLChapter08, CS::programming-languages"
l?$+%2sbk@,How is a tombstone initalised?,"The abstract machine allocates an extra word when an object is allocated in the heap, called the tombstone. The tombstone is initalised with the address of the allocated opbject, and the pointer receives the address of the tombstone. ","CS::PLChapter08, CS::programming-languages"
u#Iox9U(Uw,"Using tombstones, what happens when a poitner is dereferenced?","The abstract machine inserts a second level of indirection, so that it first accesses the tombstone and then uses what it finds there to access the object that is pointed to.","CS::PLChapter08, CS::programming-languages"
"I7r9L!q{,i",What is the cemetery in an abstract machine?,A part of memory containing all of the tombstones,"CS::PLChapter08, CS::programming-languages"
fL%c&fP#~&,How is a lock initialised (locks and keys for dangling references)?,"Every time an object is created on the heap, the object is associated with a lock which is a word of memory in which an arbitraty value is stored. ","CS::PLChapter08, CS::programming-languages"
Iq)xUiq=]J,"Using the locks and keys method for dangling references, what is a pointer composed of?",A pair: the address proper and a key (a word of memory that will be initialised with the value of the lock corresponding to the object being pointed to).,"CS::PLChapter08, CS::programming-languages"
gt`&PJbqZ-,"In languages without explicit memory deallocation, what is necessary for the abstract machine to be equipped with?",A mechanims which could automatically reclaim the memory allocated on the heap that I no longer used (garbage collection).,"CS::PLChapter08, CS::programming-languages"
piJh+jG:3S,When was garbage collection first introduced?,In Lisp around 1960,"CS::PLChapter08, CS::programming-languages"
yOC/FwntXU,What are the two phases of the operation of a garbage collector?,"1. Distinguish those objects that are still alive from those no longer in use (garbage detection); <br/> 2. COllect those objects known no longer to be in use, so that the program can reuse thhem.","CS::PLChapter08, CS::programming-languages"
p&)whkQj?h,What is reference counting?,Determining if an object is in use by seeing if there are any pointers to it.,"CS::PLChapter08, CS::programming-languages"
OAVU*]C.J<,How is reference counting implemented?,"When an object is created on the heap, an integer is allocated at the same time, this integer is the reference counter.","CS::PLChapter08, CS::programming-languages"
Q=j]|K>?|e,When will the mark and sweep method be invoked?,When the free memory available in the heap is close to being exhausted.,"CS::PLChapter08, CS::programming-languages"
L@3cG+u`=w,How does the mark and sweep method function?,"It marks objects with either unused or in use, and then sweeps all of the objects that are unused.","CS::PLChapter08, CS::programming-languages"
N&t1%G1jF%,How can we avoid the fragmentation caused by the mark and sweep technique?,"We can modify the sweep phase and convert it into a compaction phase, where live objects are moved so that they are contiguous and thereby leave a contiguous block of free memory.","CS::PLChapter08, CS::programming-languages"
"vB`,A<(`6k",What does a stop and copy collector do with the heap?,"Divides it into two equally-sized parts. During normal execution, only one of the two semi-spaces is in use. ","CS::PLChapter08, CS::programming-languages"
H.<:M9{HmU,What happens when the memory in the semi-space (one of the two spaces of the heap) is used in the stop and copy collector?,"The garbage collector is invoked, starting with pointers in the stack, it begins visiting the chain of structures held in the current semi-space, copying the structures one by one into the other semi-space, compacting them at one end of the latter. At the end of this process, the role of the two semi-spaces is swapped, and execution returns to the user program. ","CS::PLChapter08, CS::programming-languages"
c|!N8CnF-J,What are the four methods garbage collectors can be based on?,"Reference counters, mark and swapp, mark and compact and copy.","CS::PLChapter08, CS::programming-languages"
"m:z,%iX!/m",What is representation independence?,Two correct implementations of a single specification of an ADT are observationally indistinguishable by the clients of these types. i.e. it is possible to replace its implementation by an equivalent (e.g. more efficient) without it causing any new errors in clients.,"CS::PLChapter09, CS::programming-languages"
"D`,UjUF$W","How do you access a method <i>world</i> from an object, <i>hello</i>?",<pre>hello.world(params)</pre>,"CS::PLChapter10, CS::programming-languages"
"qET{qHaB%,",What is a class?,A moedl for a set of objects.,"CS::PLChapter10, CS::programming-languages"
FpNT+MUv5z,Where are objects most commonly allocated?,In the heap,"CS::PLChapter10, CS::programming-languages"
NlZ6_QxO0k,What is the mechanism of a subclasses ability to modify the definition (the implementation) of a method present in its superclass?,Method overriding,"CS::PLChapter10, CS::programming-languages"
"JrON0HZ,/W",What is the mechanism of a subclesses ability to redefine an instance variable (or field) defined in a superclass called? ,Shadowing.,"CS::PLChapter10, CS::programming-languages"
sGw=BK@S*m,What is an abstract class?,"Classes that cannot have instances, because the class lacks the implementation of some method. In such classes there is only the name and the type (that is, the signature) of one or more methods – their implementation is omitted.","CS::PLChapter10, CS::programming-languages"
ySQ(2ZcW!<,What is the purpose of a constructor?,Initialization of the object’s data.,"CS::PLChapter10, CS::programming-languages"
P@1r^oifOY,"When a language allows for the creation of multiple constructors, what are the two methods of choosing a constructor?","Choosing the constructor along with the creation operation (<i>new</i> in java) or more specific mechanisms, such as what C++ does.","CS::PLChapter10, CS::programming-languages"
ONm2)NATFR,What happens when a subcless doesn’t redefine the methods from its superclass?,It inherits them (the methods),"CS::PLChapter10, CS::programming-languages"
"y/Z_=^<0),",What do many languages do if they want a subclass to be able to access something from it’s superclass that other clients should not be able to do?,"It depends, C++ adds a third view, <i>protected</i>, which allows the subclasses only to access. ","CS::PLChapter10, CS::programming-languages"
H4<{bct^[5,"What do we call it, if a language allows a class to inherit only from a single immediate superclass?",Single (or simple) inheritance.,"CS::PLChapter10, CS::programming-languages"
rY}#TSBKhQ,"What do we call if, if a language allows a class to inherit methods from more than one immediate superclass?",Multiple inhertiance,"CS::PLChapter10, CS::programming-languages"
vVyF4wJ%!P,What allows for compatibility of subtypes and abstraction?,Dynamic Method Lookup,"CS::PLChapter10, CS::programming-languages"
piN6Y2L}%:,When is dynamic lookup executed? When is overloading?,"Dynamic lookup is at runtime, overloading is at compile time.","CS::PLChapter10, CS::programming-languages"
eb0Av~{7Y6,What is the simplest and intuitive way implementation of class and inheritance?,The one which represents the class hierarchy using a linked list. Each element represents a class and contains (pointers to) to implementation of methods that are either defined or redefined in that class. ,"CS::PLChapter10, CS::programming-languages"
yFIKUs@X(.,What is a vtable (virtual function table)?,"A list that contains not just the methods that ar rexplicitly defined or redefined in the class, but also all the moethods inhertied from its superclasses.","CS::PLChapter10, CS::programming-languages"
EBl4JJ#L(9,"When defining a subclass, B of the class A, how is the vtable for B defined?","By copying the one for A, replacing all the methods redefined in B and adding the new methods that b defined at the bottom.","CS::PLChapter10, CS::programming-languages"
Q@T_rnP0UO,What is downcasting?,"If a class’ vtable also contains the name of the class itself, the implementation we have discussed allows downward casts in the class hierarchy.","CS::PLChapter10, CS::programming-languages"
vT.<sgP3`Z,How does the compiler keep track of the nesting level of procedure calls?,"By using the symbol table, a sort of dictionary where, more generally, the compiler stores all the names used in the program and all the information necessary to manage the objects denoted by the names (for example to determine the type) and to implement visibility rules)","CS::PLChapter05, CS::programming-languages"
n@tV0qd%;9,"A problem with the implementation of static scope using the static chain is that we may have to access many memory locations to find a variable, which technique allows the reduction of the number of accesses to a constant (2)?",Display,"CS::PLChapter07, CS::programming-languages"
Hz/QXg^a[*,"Using variable-sized blocks, what happens if the chosen block is much larger than it is needed?",It is divided into two and the unused part is added to thre free list,"CS::PLChapter05, CS::programming-languages"
c{?k:*Mhq,Why is display not used much in modern implementations?,It is more expensive to maintain than the static chain in the call sequence? ,"CS::PLChapter05, CS::programming-languages"
i1sF5^!5E],What is the A-list variant for dynamic scope?,"A list where the associations are stored in a special structure, used like a stack. This is very easy to implement.","CS::PLChapter05, CS::programming-languages"
w6{da$NvUC,What is the access time of A-list?,"Linear, based on the length of the list","CS::PLChapter05, CS::programming-languages"
g>XWAbc<}_,What is the access time of Central Referncing Table (CRT)?,Constant,"CS::PLChapter05, CS::programming-languages"
l4AHTmpG:e,What is the difference between call by name and call by need?,"Call by need is a variant of call by name (if the function argument is evaluated, that value is stored for subsequent use)","CS::PLChapter07, CS::programming-languages"
"l9,Q@QV^Xo",What parameter passing method does haskell use?,Call by need.,"CS::PLChapter07, CS::programming-languages"
D$DIjr&BSM,What is used for implementation of deep binding with dynamic scope?,Closures,"CS::PLChapter07, CS::programming-languages"
"l>y7]c,h}@",What is used for implementation of shallow binding with dynamic scope?,It does not require further implementation,"CS::PLChapter07, CS::programming-languages"
A2$;`{D{``,What is used for implementation of deep binding with static scope?,It is implemented with closures,"CS::PLChapter07, CS::programming-languages"
I{UwjH0a=3,Is there any difference between shallow and deep binding using static scope?,"At first glance it might seem not, but that is not the case. With more than one block declaring the non-local name can be available; e.g. when recursion is present. ","CS::PLChapter07, CS::programming-languages"
C4oSUr*(l5,"In a simple implementation of exceptions, what happens if the first handler on the stack is not the right one, when an exception is raised?","The first handler on the stadck is removed, and the exception is raised again and repeated.","CS::PLChapter07, CS::programming-languages"
b4@x7gh2?>,"If a user can freely allocate memory, but not deallocate memory, what do we use to ensure memory stability?",Garbae collection,"CS::PLChapter08, CS::programming-languages"
Q&n87+pG!b,What is cherney’s algorithm?,A stop and copy method.,"CS::PLChapter08, CS::programming-languages"
Q`vBRNQwjw,What is the basic idea of Abstract Data Types?,To seperate the interface from the implementation.,"CS::PLChapter09, CS::programming-languages"
"F.O,hY<1mC",Enapsulation is the mechanism for seperating what two views?,"The view of the dsigner, a concept has a “detailed” view, and the view of the customer, where the concept has an “abstract” view.","CS::PLChapter09, CS::programming-languages"
Q;>;zqEz;7,What is the difference between subtyping and inheritance?,"Subtyping refers to the compatibility of interfaces, while iheritance refers to the reuse of implementations.","CS::PLChapter10, CS::programming-languages"
Qq<8-s&/{1,What methods are not virtual in java?,Private and final methods,"CS::PLChapter10, CS::programming-languages"
CJAVeM0`xV,"What is this describing? “______ cannot be instantiated, only subclassed”",Abstract classes,"CS::PLChapter10, CS::programming-languages"
mlP~OyG.d~,What is dynamic lookup?,"The code you run depends no the method, arguments and object.","CS::PLChapter10, CS::programming-languages"
eT+vv6M${G,What is late binding? ,The actual implementation of a method or function is not determined until the program is run.,"CS::PLChapter10, CS::programming-languages"
